{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp\\\\www\\\\Projet_mediatraining_DEV\\\\mediatraining\\\\src\\\\ModifReglApp.js\";\nimport React, { Component, Fragment } from 'react';\nimport jQuery from 'jquery';\nimport { withRouter } from 'react-router-dom';\nimport Select from 'react-select';\n\nclass ModifReglApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectEleve = selectedEleve => {\n      if (selectedEleve != null) {\n        this.setState({\n          selectedEleve: selectedEleve\n        }, () => {\n          jQuery.ajax({\n            url: process.env.REACT_APP_API_URL + 'Back_mediatraining/GetReglByEleve.php',\n            type: 'POST',\n            data: {\n              eleveId: this.state.selectedEleve.value\n            },\n            dataType: 'json',\n            success: (code_html, statut) => {\n              this.setState({\n                arrayRegl: code_html,\n                infoFormatEleve: code_html[0],\n                fraisReglEleve: code_html[1],\n                reglEleve: code_html[2]\n              }, () => {\n                var sommeMntFraisPayer = 0;\n\n                for (var i = 0; i < this.state.fraisReglEleve.length; i++) {\n                  sommeMntFraisPayer += parseInt(this.state.fraisReglEleve[i].mntPay);\n                }\n\n                this.setState({\n                  mntFraisTotalPayer: Number.parseFloat(sommeMntFraisPayer).toFixed(3)\n                });\n              });\n            }\n          });\n        });\n      } else {\n        this.setState({\n          arrayRegl: [],\n          infoFormatEleve: [],\n          fraisReglEleve: [],\n          reglEleve: []\n        });\n      }\n    };\n\n    this.updMntFraisPayer = (event, indexMntFraisPayer) => {\n      let mntPay = event.target.value;\n      this.setState({\n        fraisReglEleve: this.state.fraisReglEleve.map((el, id) => id === indexMntFraisPayer ? Object.assign(el, {\n          mntPay: Number.parseFloat(mntPay).toFixed(3)\n        }) : el)\n      }, () => {\n        let mntTotal = parseInt(this.state.fraisReglEleve[indexMntFraisPayer].mntTotal);\n        var mntFraisPay = parseInt(this.state.fraisReglEleve[indexMntFraisPayer].mntPay);\n        var mntFraisRest = parseInt(this.state.fraisReglEleve[indexMntFraisPayer].mntRest);\n\n        if (mntTotal >= mntFraisPay) {\n          if (mntFraisRest > 0) {\n            let mntRest = mntTotal - mntFraisPay;\n            this.setState({\n              fraisReglEleve: this.state.fraisReglEleve.map((el, id) => id === indexMntFraisPayer ? Object.assign(el, {\n                mntRest: Number.parseFloat(mntRest).toFixed(3)\n              }) : el)\n            });\n          }\n\n          let sommeMntFraisPayer = 0;\n\n          for (var i = 0; i < this.state.fraisReglEleve.length; i++) {\n            if (this.state.fraisReglEleve[i].mntPay != \"\") {\n              sommeMntFraisPayer += parseInt(this.state.fraisReglEleve[i].mntPay);\n            } else {\n              sommeMntFraisPayer += 0;\n            }\n          }\n\n          this.setState({\n            mntFraisTotalPayer: Number.parseFloat(sommeMntFraisPayer).toFixed(3)\n          });\n        }\n      });\n    };\n\n    this.updMntInscripPayer = (event, indexMntInscripPayer) => {\n      let mntPayer = event.target.value;\n      this.setState({\n        reglEleve: this.state.reglEleve.map((el, id) => id === indexMntInscripPayer ? Object.assign(el, {\n          mntPayer: Number.parseFloat(mntPayer).toFixed(3)\n        }) : el)\n      }, () => {\n        let mntAPayer = this.state.reglEleve[indexMntInscripPayer].mntAPayer;\n        let mntRestant = this.state.reglEleve[indexMntInscripPayer].mntRestant;\n\n        if (parseInt(mntAPayer) >= parseInt(mntPayer)) {\n          if (parseInt(mntRestant) > 0) {\n            let mntInscripRest = mntAPayer - mntPayer;\n            this.setState({\n              reglEleve: this.state.reglEleve.map((el, id) => id === indexMntInscripPayer ? Object.assign(el, {\n                mntRestant: Number.parseFloat(mntInscripRest).toFixed(3)\n              }) : el)\n            });\n          }\n\n          let mntIncripTotalPayer = 0;\n\n          for (var i = 0; i < this.state.reglEleve.length; i++) {\n            mntIncripTotalPayer += parseInt(this.state.reglEleve[i].mntPayer);\n          }\n\n          this.setState({\n            mntIncripTotalPayer: Number.parseFloat(mntIncripTotalPayer).toFixed(3)\n          });\n        }\n      });\n    };\n\n    this.state = {\n      listEleve: [],\n      selectedEleve: '',\n      arrayRegl: [],\n      infoFormatEleve: [],\n      fraisReglEleve: [],\n      reglEleve: [],\n      mntFraisTotalPayer: 0,\n      mntIncripTotalPayer: 0\n    };\n  }\n\n  componentDidMount() {\n    var userPermissions = JSON.parse(localStorage.getItem('userPermissions'));\n    var anneeScolaire = userPermissions[0].anneeScolaire;\n    jQuery.ajax({\n      url: process.env.REACT_APP_API_URL + 'Back_mediatraining/SelectEleves.php',\n      type: 'POST',\n      data: {\n        anneeScolaire: anneeScolaire\n      },\n      dataType: 'json',\n      success: (code_html, statut) => {\n        this.setState({\n          listEleve: code_html\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.arrayRegl.length > 0) {\n      var x = this.state.reglEleve[0].typePay;\n\n      if (x == \"Annuel\") {\n        var paiementInscrip = React.createElement(\"table\", {\n          style: {\n            marginTop: '10px'\n          },\n          class: \"table table-bordered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, \"Nom\"), React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"Montant total\"), React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, \"Montant pay\\xE9\"), React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, \"Montant restant\"))), this.state.reglEleve.map((el, index) => React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, el.typePay)), React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          disabled: true,\n          value: Number.parseFloat(el.mntAPayer).toFixed(3),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        })), parseInt(el.mntRestant) == 0 ? React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          disabled: true,\n          value: Number.parseFloat(el.mntPayer).toFixed(3),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        })) : React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          value: Number.parseFloat(el.mntPayer).toFixed(3),\n          onChange: e => this.updMntInscripPayer(e, index),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          disabled: true,\n          value: Number.parseFloat(el.mntRestant).toFixed(3),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }))))));\n      } else if (x == \"Annuel avec réduction\") {\n        var paiementInscrip = React.createElement(\"table\", {\n          style: {\n            marginTop: '10px'\n          },\n          class: \"table table-bordered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, \"Nom\"), React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \"Montant total\"), React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, \"Montant pay\\xE9\"), React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, \"Montant restant\"))), this.state.reglEleve.map((el, index) => React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, el.typePay)), React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          disabled: true,\n          value: Number.parseFloat(el.mntAPayer).toFixed(3),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        })), parseInt(el.mntRestant) == 0 ? React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          disabled: true,\n          value: Number.parseFloat(el.mntPayer).toFixed(3),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        })) : React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          value: Number.parseFloat(el.mntPayer).toFixed(3),\n          onChange: e => this.updMntInscripPayer(e, index),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          disabled: true,\n          value: Number.parseFloat(el.mntRestant).toFixed(3),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }))))));\n      } else if (x == \"Mensuelle\") {\n        var paiementInscrip = React.createElement(\"table\", {\n          style: {\n            marginTop: '10px'\n          },\n          class: \"table table-bordered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, \"Nom\"), React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, \"Montant total\"), React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, \"Montant pay\\xE9\"), React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, \"Montant restant\"))), this.state.reglEleve.map((el, index) => React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, index + 1 + \" tranche\")), React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          disabled: true,\n          value: Number.parseFloat(el.mntAPayer).toFixed(3),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        })), parseInt(el.mntRestant) == 0 ? React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          disabled: true,\n          value: Number.parseFloat(el.mntPayer).toFixed(3),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        })) : React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          value: Number.parseFloat(el.mntPayer).toFixed(3),\n          onChange: e => this.updMntInscripPayer(e, index),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          disabled: true,\n          value: Number.parseFloat(el.mntRestant).toFixed(3),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }))))));\n      } else if (x === \"2 Tranche\") {\n        var paiementInscrip = React.createElement(\"table\", {\n          style: {\n            marginTop: '10px'\n          },\n          class: \"table table-bordered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, \"Nom\"), React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, \"Montant total\"), React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, \"Montant pay\\xE9\"), React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, \"Montant restant\"))), this.state.reglEleve.map((el, index) => React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, index + 1 + \" tranche\")), React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          disabled: true,\n          value: Number.parseFloat(el.mntAPayer).toFixed(3),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        })), parseInt(el.mntRestant) == 0 ? React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          disabled: true,\n          value: Number.parseFloat(el.mntPayer).toFixed(3),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        })) : React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          value: Number.parseFloat(el.mntPayer).toFixed(3),\n          onChange: e => this.updMntInscripPayer(e, index),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          disabled: true,\n          value: Number.parseFloat(el.mntRestant).toFixed(3),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }))))));\n      } else {\n        var paiementInscrip = React.createElement(\"table\", {\n          style: {\n            marginTop: '10px'\n          },\n          class: \"table table-bordered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, \"Nom\"), React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, \"Montant total\"), React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, \"Montant pay\\xE9\"), React.createElement(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, \"Montant restant\"))), this.state.reglEleve.map((el, index) => React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, index + 1 + \" tranche\")), React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          disabled: true,\n          value: Number.parseFloat(el.mntAPayer).toFixed(3),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        })), parseInt(el.mntRestant) == 0 ? React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          disabled: true,\n          value: Number.parseFloat(el.mntPayer).toFixed(3),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        })) : React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          value: Number.parseFloat(el.mntPayer).toFixed(3),\n          onChange: e => this.updMntInscripPayer(e, index),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          disabled: true,\n          value: Number.parseFloat(el.mntRestant).toFixed(3),\n          style: {\n            textAlign: 'center',\n            borderRadius: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }))))));\n      }\n    } else {\n      var x = 0;\n    }\n\n    return React.createElement(\"div\", {\n      id: \"page-wrapper\",\n      style: {\n        minHeight: '263px',\n        marginLeft: '0px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row bg-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Mise \\xE0 jour reglement apprenant\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"white-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"El\\xE9ves\"), React.createElement(Select, {\n      isClearable: true,\n      isSearchable: true,\n      onChange: e => this.selectEleve(e),\n      options: this.state.listEleve,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }))), this.state.arrayRegl.length > 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"Groupe\"), React.createElement(\"input\", {\n      type: \"text\",\n      disabled: true,\n      value: this.state.infoFormatEleve[0].groupe,\n      className: \"form-control\",\n      style: {\n        backgroundColor: 'white',\n        borderRadius: '5px',\n        border: 'solid 1px #B3B3B3'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Niveau\"), React.createElement(\"input\", {\n      type: \"text\",\n      disabled: true,\n      value: this.state.infoFormatEleve[0].niveau,\n      className: \"form-control\",\n      style: {\n        backgroundColor: 'white',\n        borderRadius: '5px',\n        border: 'solid 1px #B3B3B3'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"formation\"), React.createElement(\"input\", {\n      type: \"text\",\n      disabled: true,\n      value: this.state.infoFormatEleve[0].formation,\n      className: \"form-control\",\n      style: {\n        backgroundColor: 'white',\n        borderRadius: '5px',\n        border: 'solid 1px #B3B3B3'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Specialite\"), React.createElement(\"input\", {\n      type: \"text\",\n      disabled: true,\n      value: this.state.infoFormatEleve[0].nomSpecialite,\n      className: \"form-control\",\n      style: {\n        backgroundColor: 'white',\n        borderRadius: '5px',\n        border: 'solid 1px #B3B3B3'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    })))) : null), this.state.arrayRegl.length > 0 ? React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      style: {\n        marginTop: '10px'\n      },\n      className: \"table table-bordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      style: {\n        textAlign: 'center'\n      },\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Nom\"), React.createElement(\"th\", {\n      style: {\n        textAlign: 'center'\n      },\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Montant total\"), React.createElement(\"th\", {\n      style: {\n        textAlign: 'center'\n      },\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"Montant pay\\xE9\"), React.createElement(\"th\", {\n      style: {\n        textAlign: 'center'\n      },\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Montant restant\"))), this.state.fraisReglEleve.map((el, index) => React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        textAlign: 'center',\n        borderRadius: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, el.nomFrais)), React.createElement(\"td\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      disabled: true,\n      value: Number.parseFloat(el.mntTotal).toFixed(3),\n      style: {\n        textAlign: 'center',\n        borderRadius: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    })), parseInt(el.mntRest) == 0 ? React.createElement(\"td\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      disabled: true,\n      value: el.mntPay,\n      style: {\n        textAlign: 'center',\n        borderRadius: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    })) : React.createElement(\"td\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      value: el.mntPay,\n      onChange: e => this.updMntFraisPayer(e, index),\n      style: {\n        textAlign: 'center',\n        borderRadius: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      disabled: true,\n      value: el.mntRest,\n      style: {\n        textAlign: 'center',\n        borderRadius: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginBottom: '10px',\n        marginTop: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginRight: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"Montant total frais payer\")), React.createElement(\"div\", {\n      style: {\n        marginRight: '-40px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      disabled: true,\n      value: this.state.mntFraisTotalPayer,\n      style: {\n        border: 'solid',\n        borderColor: '#DCDCDC',\n        textAlign: 'center',\n        width: '70%',\n        borderRadius: '5px'\n      },\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }))), paiementInscrip, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginBottom: '10px',\n        marginTop: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginRight: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, \"Montant total inscription payer\")), React.createElement(\"div\", {\n      style: {\n        marginRight: '-40px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      disabled: true,\n      value: this.state.mntIncripTotalPayer,\n      style: {\n        border: 'solid',\n        borderColor: '#DCDCDC',\n        textAlign: 'center',\n        width: '70%',\n        borderRadius: '5px'\n      },\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    })))) : null)))));\n  }\n\n}\n\nexport default withRouter(ModifReglApp);","map":{"version":3,"sources":["C:/wamp/www/Projet_mediatraining_DEV/mediatraining/src/ModifReglApp.js"],"names":["React","Component","Fragment","jQuery","withRouter","Select","ModifReglApp","constructor","props","selectEleve","selectedEleve","setState","ajax","url","process","env","REACT_APP_API_URL","type","data","eleveId","state","value","dataType","success","code_html","statut","arrayRegl","infoFormatEleve","fraisReglEleve","reglEleve","sommeMntFraisPayer","i","length","parseInt","mntPay","mntFraisTotalPayer","Number","parseFloat","toFixed","updMntFraisPayer","event","indexMntFraisPayer","target","map","el","id","Object","assign","mntTotal","mntFraisPay","mntFraisRest","mntRest","updMntInscripPayer","indexMntInscripPayer","mntPayer","mntAPayer","mntRestant","mntInscripRest","mntIncripTotalPayer","listEleve","componentDidMount","userPermissions","JSON","parse","localStorage","getItem","anneeScolaire","render","x","typePay","paiementInscrip","marginTop","textAlign","index","borderRadius","e","minHeight","marginLeft","groupe","backgroundColor","border","niveau","formation","nomSpecialite","nomFrais","display","justifyContent","marginBottom","marginRight","borderColor","width"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport jQuery from 'jquery'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Select from 'react-select';\r\n\r\nclass ModifReglApp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listEleve: [],\r\n            selectedEleve: '',\r\n            arrayRegl: [],\r\n            infoFormatEleve: [],\r\n            fraisReglEleve: [],\r\n            reglEleve: [],\r\n            mntFraisTotalPayer: 0,\r\n            mntIncripTotalPayer: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        var userPermissions = JSON.parse((localStorage.getItem('userPermissions')));\r\n        var anneeScolaire = userPermissions[0].anneeScolaire\r\n        jQuery.ajax({\r\n            url: process.env.REACT_APP_API_URL + 'Back_mediatraining/SelectEleves.php',\r\n            type: 'POST',\r\n            data: {\r\n                anneeScolaire: anneeScolaire\r\n            },\r\n            dataType: 'json',\r\n            success: (code_html, statut) => {\r\n                this.setState({\r\n                    listEleve: code_html\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    selectEleve = (selectedEleve) => {\r\n        if (selectedEleve != null) {\r\n            this.setState({ selectedEleve: selectedEleve }, () => {\r\n                jQuery.ajax({\r\n                    url: process.env.REACT_APP_API_URL + 'Back_mediatraining/GetReglByEleve.php',\r\n                    type: 'POST',\r\n                    data: {\r\n                        eleveId: this.state.selectedEleve.value\r\n                    },\r\n                    dataType: 'json',\r\n                    success: (code_html, statut) => {\r\n                        this.setState({\r\n                            arrayRegl: code_html,\r\n                            infoFormatEleve: code_html[0],\r\n                            fraisReglEleve: code_html[1],\r\n                            reglEleve: code_html[2]\r\n                        }, () => {\r\n                            var sommeMntFraisPayer = 0;\r\n                            for (var i = 0; i < this.state.fraisReglEleve.length; i++) {\r\n                                sommeMntFraisPayer += parseInt(this.state.fraisReglEleve[i].mntPay)\r\n                            }\r\n                            this.setState({\r\n                                mntFraisTotalPayer: Number.parseFloat(sommeMntFraisPayer).toFixed(3)\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                arrayRegl: [],\r\n                infoFormatEleve: [],\r\n                fraisReglEleve: [],\r\n                reglEleve: []\r\n            });\r\n        }\r\n    }\r\n\r\n    updMntFraisPayer = (event, indexMntFraisPayer) => {\r\n        let mntPay = event.target.value\r\n        this.setState({\r\n            fraisReglEleve: this.state.fraisReglEleve.map((el, id) => (id === indexMntFraisPayer ? Object.assign(el, { mntPay: Number.parseFloat(mntPay).toFixed(3) }) : el))\r\n        }, () => {\r\n            let mntTotal = parseInt(this.state.fraisReglEleve[indexMntFraisPayer].mntTotal)\r\n            var mntFraisPay = parseInt(this.state.fraisReglEleve[indexMntFraisPayer].mntPay)\r\n            var mntFraisRest = parseInt(this.state.fraisReglEleve[indexMntFraisPayer].mntRest)\r\n            if (mntTotal >= mntFraisPay) {\r\n                if (mntFraisRest > 0) {\r\n                    let mntRest = mntTotal - mntFraisPay\r\n                    this.setState({\r\n                        fraisReglEleve: this.state.fraisReglEleve.map((el, id) => (id === indexMntFraisPayer ? Object.assign(el, { mntRest: Number.parseFloat(mntRest).toFixed(3) }) : el))\r\n                    });\r\n                }\r\n                let sommeMntFraisPayer = 0;\r\n                for (var i = 0; i < this.state.fraisReglEleve.length; i++) {\r\n                    if (this.state.fraisReglEleve[i].mntPay != \"\") {\r\n                        sommeMntFraisPayer += parseInt(this.state.fraisReglEleve[i].mntPay)\r\n                    }\r\n                    else {\r\n                        sommeMntFraisPayer += 0\r\n                    }\r\n                }\r\n                this.setState({\r\n                    mntFraisTotalPayer: Number.parseFloat(sommeMntFraisPayer).toFixed(3)\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    updMntInscripPayer = (event, indexMntInscripPayer) => {\r\n        let mntPayer = event.target.value\r\n        this.setState({\r\n            reglEleve: this.state.reglEleve.map((el, id) => (id === indexMntInscripPayer ? Object.assign(el, { mntPayer: Number.parseFloat(mntPayer).toFixed(3) }) : el))\r\n        }, () => {\r\n            let mntAPayer = this.state.reglEleve[indexMntInscripPayer].mntAPayer\r\n            let mntRestant = this.state.reglEleve[indexMntInscripPayer].mntRestant\r\n            if (parseInt(mntAPayer) >= parseInt(mntPayer)) {\r\n                if (parseInt(mntRestant) > 0) {\r\n                    let mntInscripRest = mntAPayer - mntPayer\r\n                    this.setState({\r\n                        reglEleve: this.state.reglEleve.map((el, id) => (id === indexMntInscripPayer ? Object.assign(el, { mntRestant: Number.parseFloat(mntInscripRest).toFixed(3) }) : el))\r\n                    });\r\n                }\r\n                let mntIncripTotalPayer = 0\r\n                for (var i = 0; i < this.state.reglEleve.length; i++) {\r\n                    mntIncripTotalPayer += parseInt(this.state.reglEleve[i].mntPayer)\r\n                }\r\n                this.setState({\r\n                    mntIncripTotalPayer: Number.parseFloat(mntIncripTotalPayer).toFixed(3)\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.arrayRegl.length > 0) {\r\n            var x = this.state.reglEleve[0].typePay\r\n            if (x == \"Annuel\") {\r\n                var paiementInscrip = (<table style={{ marginTop: '10px' }} class=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Nom</th>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Montant total</th>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Montant payé</th>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Montant restant</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {this.state.reglEleve.map((el, index) =>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td style={{ textAlign: 'center' }}><p style={{ textAlign: 'center', borderRadius: '5px' }}>{el.typePay}</p></td>\r\n                                <td style={{ textAlign: 'center' }}><input type=\"number\" disabled value={Number.parseFloat(el.mntAPayer).toFixed(3)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>\r\n                                {parseInt(el.mntRestant) == 0 ? (<td style={{ textAlign: 'center' }}><input type=\"number\" disabled value={Number.parseFloat(el.mntPayer).toFixed(3)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>) : (<td style={{ textAlign: 'center' }}><input type=\"number\" value={Number.parseFloat(el.mntPayer).toFixed(3)} onChange={(e) => this.updMntInscripPayer(e, index)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>)}\r\n                                <td style={{ textAlign: 'center' }}><input type=\"number\" disabled value={Number.parseFloat(el.mntRestant).toFixed(3)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    )}\r\n                </table>)\r\n            }\r\n            else if (x == \"Annuel avec réduction\") {\r\n                var paiementInscrip = (<table style={{ marginTop: '10px' }} class=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Nom</th>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Montant total</th>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Montant payé</th>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Montant restant</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {this.state.reglEleve.map((el, index) =>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td style={{ textAlign: 'center' }}><p style={{ textAlign: 'center', borderRadius: '5px' }}>{el.typePay}</p></td>\r\n                                <td style={{ textAlign: 'center' }}><input type=\"number\" disabled value={Number.parseFloat(el.mntAPayer).toFixed(3)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>\r\n                                {parseInt(el.mntRestant) == 0 ? (<td style={{ textAlign: 'center' }}><input type=\"number\" disabled value={Number.parseFloat(el.mntPayer).toFixed(3)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>) : (<td style={{ textAlign: 'center' }}><input type=\"number\" value={Number.parseFloat(el.mntPayer).toFixed(3)} onChange={(e) => this.updMntInscripPayer(e, index)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>)}\r\n                                <td style={{ textAlign: 'center' }}><input type=\"number\" disabled value={Number.parseFloat(el.mntRestant).toFixed(3)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    )}\r\n                </table>)\r\n            }\r\n            else if (x == \"Mensuelle\") {\r\n                var paiementInscrip = (<table style={{ marginTop: '10px' }} class=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Nom</th>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Montant total</th>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Montant payé</th>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Montant restant</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {this.state.reglEleve.map((el, index) =>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td style={{ textAlign: 'center' }}><p style={{ textAlign: 'center', borderRadius: '5px' }}>{index + 1 + \" tranche\"}</p></td>\r\n                                <td style={{ textAlign: 'center' }}><input type=\"number\" disabled value={Number.parseFloat(el.mntAPayer).toFixed(3)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>\r\n                                {parseInt(el.mntRestant) == 0 ? (<td style={{ textAlign: 'center' }}><input type=\"number\" disabled value={Number.parseFloat(el.mntPayer).toFixed(3)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>) : (<td style={{ textAlign: 'center' }}><input type=\"number\" value={Number.parseFloat(el.mntPayer).toFixed(3)} onChange={(e) => this.updMntInscripPayer(e, index)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>)}\r\n                                <td style={{ textAlign: 'center' }}><input type=\"number\" disabled value={Number.parseFloat(el.mntRestant).toFixed(3)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    )}\r\n                </table>)\r\n            }\r\n            else if (x === \"2 Tranche\") {\r\n                var paiementInscrip = (<table style={{ marginTop: '10px' }} class=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Nom</th>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Montant total</th>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Montant payé</th>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Montant restant</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {this.state.reglEleve.map((el, index) =>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td style={{ textAlign: 'center' }}><p style={{ textAlign: 'center', borderRadius: '5px' }}>{index + 1 + \" tranche\"}</p></td>\r\n                                <td style={{ textAlign: 'center' }}><input type=\"number\" disabled value={Number.parseFloat(el.mntAPayer).toFixed(3)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>\r\n                                {parseInt(el.mntRestant) == 0 ? (<td style={{ textAlign: 'center' }}><input type=\"number\" disabled value={Number.parseFloat(el.mntPayer).toFixed(3)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>) : (<td style={{ textAlign: 'center' }}><input type=\"number\" value={Number.parseFloat(el.mntPayer).toFixed(3)} onChange={(e) => this.updMntInscripPayer(e, index)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>)}\r\n                                <td style={{ textAlign: 'center' }}><input type=\"number\" disabled value={Number.parseFloat(el.mntRestant).toFixed(3)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    )}\r\n                </table>)\r\n            }\r\n            else {\r\n                var paiementInscrip = (<table style={{ marginTop: '10px' }} class=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Nom</th>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Montant total</th>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Montant payé</th>\r\n                            <th style={{ textAlign: 'center' }} scope=\"col\">Montant restant</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {this.state.reglEleve.map((el, index) =>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td style={{ textAlign: 'center' }}><p style={{ textAlign: 'center', borderRadius: '5px' }}>{index + 1 + \" tranche\"}</p></td>\r\n                                <td style={{ textAlign: 'center' }}><input type=\"number\" disabled value={Number.parseFloat(el.mntAPayer).toFixed(3)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>\r\n                                {parseInt(el.mntRestant) == 0 ? (<td style={{ textAlign: 'center' }}><input type=\"number\" disabled value={Number.parseFloat(el.mntPayer).toFixed(3)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>) : (<td style={{ textAlign: 'center' }}><input type=\"number\" value={Number.parseFloat(el.mntPayer).toFixed(3)} onChange={(e) => this.updMntInscripPayer(e, index)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>)}\r\n                                <td style={{ textAlign: 'center' }}><input type=\"number\" disabled value={Number.parseFloat(el.mntRestant).toFixed(3)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    )}\r\n                </table>)\r\n            }\r\n        }\r\n        else {\r\n            var x = 0\r\n        }\r\n        return (\r\n            <div id=\"page-wrapper\" style={{ minHeight: '263px', marginLeft: '0px' }}>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row bg-title\">\r\n                        <div className=\"col-lg-12\">\r\n                            <h4 className=\"page-title\">Mise à jour reglement apprenant</h4>\r\n                        </div>\r\n                        {/* /.col-lg-12 */}\r\n                    </div>\r\n                    {/* /.row */}\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"white-box\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Eléves</label>\r\n                                            <Select\r\n                                                isClearable={true}\r\n                                                isSearchable={true}\r\n                                                onChange={(e) => this.selectEleve(e)}\r\n                                                options={this.state.listEleve}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    {this.state.arrayRegl.length > 0 ?\r\n                                        (<Fragment>\r\n                                            <div className=\"col-md-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Groupe</label>\r\n                                                    <input type=\"text\" disabled value={this.state.infoFormatEleve[0].groupe} className=\"form-control\" style={{ backgroundColor: 'white', borderRadius: '5px', border: 'solid 1px #B3B3B3' }} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Niveau</label>\r\n                                                    <input type=\"text\" disabled value={this.state.infoFormatEleve[0].niveau} className=\"form-control\" style={{ backgroundColor: 'white', borderRadius: '5px', border: 'solid 1px #B3B3B3' }} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>formation</label>\r\n                                                    <input type=\"text\" disabled value={this.state.infoFormatEleve[0].formation} className=\"form-control\" style={{ backgroundColor: 'white', borderRadius: '5px', border: 'solid 1px #B3B3B3' }} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Specialite</label>\r\n                                                    <input type=\"text\" disabled value={this.state.infoFormatEleve[0].nomSpecialite} className=\"form-control\" style={{ backgroundColor: 'white', borderRadius: '5px', border: 'solid 1px #B3B3B3' }} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </Fragment>) : (null)\r\n                                    }\r\n                                </div>\r\n                                {this.state.arrayRegl.length > 0 ?\r\n                                    (<div className=\"row\">\r\n                                        <table style={{ marginTop: '10px' }} className=\"table table-bordered\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th style={{ textAlign: 'center' }} scope=\"col\">Nom</th>\r\n                                                    <th style={{ textAlign: 'center' }} scope=\"col\">Montant total</th>\r\n                                                    <th style={{ textAlign: 'center' }} scope=\"col\">Montant payé</th>\r\n                                                    <th style={{ textAlign: 'center' }} scope=\"col\">Montant restant</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            {this.state.fraisReglEleve.map((el, index) =>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td style={{ textAlign: 'center' }}><p style={{ textAlign: 'center', borderRadius: '5px' }}>{el.nomFrais}</p></td>\r\n                                                        <td style={{ textAlign: 'center' }}><input type=\"number\" disabled value={Number.parseFloat(el.mntTotal).toFixed(3)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>\r\n                                                        {parseInt(el.mntRest) == 0 ? (<td style={{ textAlign: 'center' }}><input type=\"number\" disabled value={el.mntPay} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>) : (<td style={{ textAlign: 'center' }}><input type=\"number\" value={el.mntPay} onChange={(e) => this.updMntFraisPayer(e, index)} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>)}\r\n                                                        <td style={{ textAlign: 'center' }}><input type=\"number\" disabled value={el.mntRest} style={{ textAlign: 'center', borderRadius: '5px' }} /></td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            )}\r\n                                        </table>\r\n                                        <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '10px', marginTop: '15px' }}>\r\n                                            <div style={{ marginRight: '10px' }}>\r\n                                                <p>Montant total frais payer</p>\r\n                                            </div>\r\n                                            <div style={{ marginRight: '-40px' }}>\r\n                                                <input disabled value={this.state.mntFraisTotalPayer} style={{ border: 'solid', borderColor: '#DCDCDC', textAlign: 'center', width: '70%', borderRadius: '5px' }} type=\"text\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        {paiementInscrip}\r\n                                        <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '10px', marginTop: '15px' }}>\r\n                                            <div style={{ marginRight: '10px' }}>\r\n                                                <p>Montant total inscription payer</p>\r\n                                            </div>\r\n                                            <div style={{ marginRight: '-40px' }}>\r\n                                                <input disabled value={this.state.mntIncripTotalPayer} style={{ border: 'solid', borderColor: '#DCDCDC', textAlign: 'center', width: '70%', borderRadius: '5px' }} type=\"text\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>) : (null)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ModifReglApp);"]},"metadata":{},"sourceType":"module"}