{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = forEachKeyAncestor;\n/**\n * Run loopFunc for each ancestor key in a dot-delimited key. For example,\n * if key is \"a.b.c\", loopFunc will be called first with ('a.b', 'c') and then with ('a', 'b.c')\n */\n\nfunction forEachKeyAncestor(key, loopFunc) {\n  var lastDot; // Iterate the dot-syntax hierarchy\n\n  var ancestor = key;\n\n  do {\n    lastDot = ancestor.lastIndexOf('.');\n\n    if (lastDot !== -1) {\n      ancestor = ancestor.slice(0, lastDot);\n      var remainder = key.slice(ancestor.length + 1);\n      loopFunc(ancestor, remainder); // Remove last path component\n    }\n  } while (lastDot !== -1);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["C:/Users/asus/Desktop/new template/myadmin-lite/node_modules/simpl-schema/dist/utility/forEachKeyAncestor.js"],"names":["Object","defineProperty","exports","value","forEachKeyAncestor","key","loopFunc","lastDot","ancestor","lastIndexOf","slice","remainder","length","module","default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,kBAArB;AAEA;;;;;AAIA,SAASA,kBAAT,CAA4BC,GAA5B,EAAiCC,QAAjC,EAA2C;AACzC,MAAIC,OAAJ,CADyC,CAC5B;;AAEb,MAAIC,QAAQ,GAAGH,GAAf;;AAEA,KAAG;AACDE,IAAAA,OAAO,GAAGC,QAAQ,CAACC,WAAT,CAAqB,GAArB,CAAV;;AAEA,QAAIF,OAAO,KAAK,CAAC,CAAjB,EAAoB;AAClBC,MAAAA,QAAQ,GAAGA,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkBH,OAAlB,CAAX;AACA,UAAII,SAAS,GAAGN,GAAG,CAACK,KAAJ,CAAUF,QAAQ,CAACI,MAAT,GAAkB,CAA5B,CAAhB;AACAN,MAAAA,QAAQ,CAACE,QAAD,EAAWG,SAAX,CAAR,CAHkB,CAGa;AAChC;AACF,GARD,QAQSJ,OAAO,KAAK,CAAC,CARtB;AASD;;AAEDM,MAAM,CAACX,OAAP,GAAiBA,OAAO,CAACY,OAAzB;AACAD,MAAM,CAACX,OAAP,CAAeY,OAAf,GAAyBZ,OAAO,CAACY,OAAjC","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = forEachKeyAncestor;\n\n/**\n * Run loopFunc for each ancestor key in a dot-delimited key. For example,\n * if key is \"a.b.c\", loopFunc will be called first with ('a.b', 'c') and then with ('a', 'b.c')\n */\nfunction forEachKeyAncestor(key, loopFunc) {\n  var lastDot; // Iterate the dot-syntax hierarchy\n\n  var ancestor = key;\n\n  do {\n    lastDot = ancestor.lastIndexOf('.');\n\n    if (lastDot !== -1) {\n      ancestor = ancestor.slice(0, lastDot);\n      var remainder = key.slice(ancestor.length + 1);\n      loopFunc(ancestor, remainder); // Remove last path component\n    }\n  } while (lastDot !== -1);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}