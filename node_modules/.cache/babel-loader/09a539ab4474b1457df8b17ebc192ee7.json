{"ast":null,"code":"import React from 'react';\nimport classnames from 'classnames';\nimport { connectField } from 'uniforms';\nimport wrapField from './wrapField';\n\nconst Text = props => wrapField(props, React.createElement(\"input\", {\n  className: classnames(props.inputClassName, 'form-control', {\n    'is-invalid': props.error\n  }),\n  disabled: props.disabled,\n  id: props.id,\n  name: props.name,\n  onChange: event => props.onChange(event.target.value),\n  placeholder: props.placeholder,\n  ref: props.inputRef,\n  type: props.type,\n  value: props.value\n}));\n\nText.defaultProps = {\n  type: 'text'\n};\nexport default connectField(Text);","map":{"version":3,"sources":["C:/Users/asus/Desktop/new template/myadmin-lite/node_modules/uniforms-bootstrap4/es6/TextField.js"],"names":["React","classnames","connectField","wrapField","Text","props","createElement","className","inputClassName","error","disabled","id","name","onChange","event","target","value","placeholder","ref","inputRef","type","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AACA,MAAMC,IAAI,GAAGC,KAAK,IAAIF,SAAS,CAACE,KAAD,EAAQL,KAAK,CAACM,aAAN,CAAoB,OAApB,EAA6B;AAAEC,EAAAA,SAAS,EAAEN,UAAU,CAACI,KAAK,CAACG,cAAP,EAAuB,cAAvB,EAAuC;AAC1H,kBAAcH,KAAK,CAACI;AADsG,GAAvC,CAAvB;AAE5DC,EAAAA,QAAQ,EAAEL,KAAK,CAACK,QAF4C;AAElCC,EAAAA,EAAE,EAAEN,KAAK,CAACM,EAFwB;AAEpBC,EAAAA,IAAI,EAAEP,KAAK,CAACO,IAFQ;AAEFC,EAAAA,QAAQ,EAAEC,KAAK,IAAIT,KAAK,CAACQ,QAAN,CAAeC,KAAK,CAACC,MAAN,CAAaC,KAA5B,CAFjB;AAEqDC,EAAAA,WAAW,EAAEZ,KAAK,CAACY,WAFxE;AAEqFC,EAAAA,GAAG,EAAEb,KAAK,CAACc,QAFhG;AAE0GC,EAAAA,IAAI,EAAEf,KAAK,CAACe,IAFtH;AAE4HJ,EAAAA,KAAK,EAAEX,KAAK,CAACW;AAFzI,CAA7B,CAAR,CAA/B;;AAGAZ,IAAI,CAACiB,YAAL,GAAoB;AAAED,EAAAA,IAAI,EAAE;AAAR,CAApB;AACA,eAAelB,YAAY,CAACE,IAAD,CAA3B","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { connectField } from 'uniforms';\nimport wrapField from './wrapField';\nconst Text = props => wrapField(props, React.createElement(\"input\", { className: classnames(props.inputClassName, 'form-control', {\n        'is-invalid': props.error,\n    }), disabled: props.disabled, id: props.id, name: props.name, onChange: event => props.onChange(event.target.value), placeholder: props.placeholder, ref: props.inputRef, type: props.type, value: props.value }));\nText.defaultProps = { type: 'text' };\nexport default connectField(Text);\n"]},"metadata":{},"sourceType":"module"}