{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp\\\\www\\\\Projet_snaii_DEV\\\\snaii\\\\src\\\\Demandes.js\";\nimport React, { Component } from 'react';\nimport { Link, BrowserRouter as Router, Route, Switch, withRouter, HashRouter, Redirect } from 'react-router-dom';\nimport DataTable from 'react-data-table-component';\nimport jQuery from 'jquery';\nimport './paginate.css';\n\nclass Demandes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      columns: [{\n        name: 'Nom client',\n        selector: 'nomClient',\n        sortable: false,\n        center: true\n      }, {\n        name: 'Nom travailleur',\n        selector: 'nomTravailleur',\n        sortable: false,\n        center: true\n      }, {\n        name: 'Service',\n        selector: 'nomService',\n        sortable: false,\n        center: true\n      }, {\n        name: 'Etat',\n        selector: 'etat',\n        sortable: false,\n        center: true\n      }, {\n        name: 'Note',\n        selector: '',\n        sortable: false,\n        center: true\n      }, {\n        name: 'Explorer',\n        cell: row => React.createElement(Link, {\n          to: {\n            pathname: '/ExplDemande',\n            state: {\n              id_demande: row.id_demande\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"buttonExplorer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          style: {\n            color: 'white'\n          },\n          class: \"far fa-eye\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }))),\n        ignoreRowClick: true,\n        allowOverflow: true,\n        button: true\n      }],\n      nombreTotalElement: 0,\n      filterElement: '',\n      mycurrentPage: 1,\n      resetFirstPage: false,\n      nbrEltperPage: 5,\n      pending: true\n    };\n    this.newElement = this.newElement.bind(this);\n    this.filterSearch = this.filterSearch.bind(this);\n  }\n\n  componentDidMount() {\n    jQuery.ajax({\n      url: process.env.REACT_APP_API_URL + 'Back_snaii/Demandes.php',\n      type: 'POST',\n      data: {\n        query: '',\n        limit: this.state.nbrEltperPage,\n        page: 1\n      },\n      dataType: 'json',\n      success: (code_html, statut) => {\n        console.log(code_html);\n        this.setState({\n          nombreTotalElement: code_html.total,\n          data: code_html.data,\n          pending: false\n        });\n      }\n    });\n  }\n\n  newElement(page, totalRows) {\n    this.setState({\n      pending: true\n    }, function () {\n      console.log(page);\n      console.log(totalRows);\n      jQuery.ajax({\n        url: process.env.REACT_APP_API_URL + 'back_snaii/Demandes.php',\n        type: 'POST',\n        data: {\n          query: this.state.filterElement,\n          limit: this.state.nbrEltperPage,\n          page: page\n        },\n        dataType: 'json',\n        success: (code_html, statut) => {\n          console.log(code_html);\n          this.setState({\n            nombreTotalElement: code_html.total,\n            data: code_html.data,\n            pending: false\n          });\n        }\n      });\n    }.bind(this));\n  }\n\n  perPage(currentRowsPerPage, currentPage) {\n    this.setState({\n      nbrEltperPage: currentRowsPerPage,\n      pending: true\n    }, function () {\n      console.log(currentRowsPerPage);\n      console.log(currentPage);\n      jQuery.ajax({\n        url: process.env.REACT_APP_API_URL + 'back_snaii/Demandes.php',\n        type: 'POST',\n        data: {\n          query: this.state.filterElement,\n          limit: currentRowsPerPage,\n          page: currentPage\n        },\n        dataType: 'json',\n        success: (code_html, statut) => {\n          console.log(code_html);\n          this.setState({\n            nombreTotalElement: code_html.total,\n            data: code_html.data,\n            pending: false\n          });\n        }\n      });\n    });\n  }\n\n  filterSearch(event) {\n    this.setState({\n      filterElement: event.target.value,\n      resetFirstPage: !this.state.resetFirstPage,\n      pending: true\n    }, function () {\n      jQuery.ajax({\n        url: process.env.REACT_APP_API_URL + 'back_snaii/Demandes.php',\n        type: 'POST',\n        data: {\n          query: this.state.filterElement,\n          limit: this.state.nbrEltperPage,\n          page: 1\n        },\n        dataType: 'json',\n        success: (code_html, statut) => {\n          console.log(code_html);\n          this.setState({\n            nombreTotalElement: code_html.total,\n            data: code_html.data,\n            pending: false\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"page-wrapper\",\n      style: {\n        minHeight: '263px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row bg-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Demandes\"))), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"white-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mb-0 form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-alternative input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      onChange: (currentRowsPerPage, currentPage) => this.filterSearch(currentRowsPerPage, currentPage),\n      placeholder: \"Search\",\n      type: \"text\",\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    })))), React.createElement(DataTable, {\n      columns: this.state.columns,\n      data: this.state.data,\n      highlightOnHover: true,\n      pagination: true,\n      paginationServer: true,\n      onChangePage: (page, totalRows) => this.newElement(page, totalRows),\n      paginationTotalRows: this.state.nombreTotalElement,\n      paginationPerPage: this.state.nbrEltperPage,\n      paginationRowsPerPageOptions: [5, 10, 15, 20, 25],\n      onChangeRowsPerPage: (currentRowsPerPage, currentPage) => this.perPage(currentRowsPerPage, currentPage),\n      paginationResetDefaultPage: this.state.resetFirstPage,\n      paginationComponentOptions: {\n        rowsPerPageText: 'Elements par page:',\n        rangeSeparatorText: 'de',\n        noRowsPerPage: false\n      },\n      progressPending: this.state.pending,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Demandes;","map":{"version":3,"sources":["C:/wamp/www/Projet_snaii_DEV/snaii/src/Demandes.js"],"names":["React","Component","Link","BrowserRouter","Router","Route","Switch","withRouter","HashRouter","Redirect","DataTable","jQuery","Demandes","constructor","props","state","data","columns","name","selector","sortable","center","cell","row","pathname","id_demande","color","ignoreRowClick","allowOverflow","button","nombreTotalElement","filterElement","mycurrentPage","resetFirstPage","nbrEltperPage","pending","newElement","bind","filterSearch","componentDidMount","ajax","url","process","env","REACT_APP_API_URL","type","query","limit","page","dataType","success","code_html","statut","console","log","setState","total","totalRows","perPage","currentRowsPerPage","currentPage","event","target","value","render","minHeight","rowsPerPageText","rangeSeparatorText","noRowsPerPage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link, BrowserRouter as Router, Route, Switch, withRouter, HashRouter, Redirect } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport jQuery from 'jquery'\r\nimport './paginate.css'\r\n\r\nclass Demandes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            columns: [\r\n                {\r\n                    name: 'Nom client',\r\n                    selector: 'nomClient',\r\n                    sortable: false,\r\n                    center: true\r\n                },\r\n                {\r\n                    name: 'Nom travailleur',\r\n                    selector: 'nomTravailleur',\r\n                    sortable: false,\r\n                    center: true\r\n                },\r\n                {\r\n                    name: 'Service',\r\n                    selector: 'nomService',\r\n                    sortable: false,\r\n                    center: true\r\n                },\r\n                {\r\n                    name: 'Etat',\r\n                    selector: 'etat',\r\n                    sortable: false,\r\n                    center: true\r\n                },\r\n                {\r\n                    name: 'Note',\r\n                    selector: '',\r\n                    sortable: false,\r\n                    center: true\r\n                },\r\n                {\r\n                    name: 'Explorer',\r\n                    cell: row => <Link to={{\r\n                        pathname: '/ExplDemande',\r\n                        state: { id_demande: row.id_demande }\r\n                    }}><button className='buttonExplorer'><i style={{ color: 'white' }} class=\"far fa-eye\"></i></button></Link>,\r\n                    ignoreRowClick: true,\r\n                    allowOverflow: true,\r\n                    button: true,\r\n                },\r\n            ],\r\n            nombreTotalElement: 0,\r\n            filterElement: '',\r\n            mycurrentPage: 1,\r\n            resetFirstPage: false,\r\n            nbrEltperPage: 5,\r\n            pending: true\r\n        }\r\n        this.newElement = this.newElement.bind(this);\r\n        this.filterSearch = this.filterSearch.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        jQuery.ajax({\r\n            url: process.env.REACT_APP_API_URL + 'Back_snaii/Demandes.php',\r\n            type: 'POST',\r\n            data: {\r\n                query: '',\r\n                limit: this.state.nbrEltperPage,\r\n                page: 1\r\n            },\r\n            dataType: 'json',\r\n            success: (code_html, statut) => {\r\n                console.log(code_html)\r\n                this.setState({\r\n                    nombreTotalElement: code_html.total,\r\n                    data: code_html.data,\r\n                    pending: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    newElement(page, totalRows) {\r\n        this.setState({\r\n            pending: true\r\n        },\r\n            function () {\r\n                console.log(page)\r\n                console.log(totalRows)\r\n                jQuery.ajax({\r\n                    url: process.env.REACT_APP_API_URL + 'back_snaii/Demandes.php',\r\n                    type: 'POST',\r\n                    data: {\r\n                        query: this.state.filterElement,\r\n                        limit: this.state.nbrEltperPage,\r\n                        page: page\r\n                    },\r\n                    dataType: 'json',\r\n                    success: (code_html, statut) => {\r\n                        console.log(code_html)\r\n                        this.setState({\r\n                            nombreTotalElement: code_html.total,\r\n                            data: code_html.data,\r\n                            pending: false\r\n                        });\r\n                    }\r\n                });\r\n            }.bind(this)\r\n        )\r\n    }\r\n\r\n    perPage(currentRowsPerPage, currentPage) {\r\n        this.setState(\r\n            {\r\n                nbrEltperPage: currentRowsPerPage,\r\n                pending: true\r\n            }\r\n            , function () {\r\n                console.log(currentRowsPerPage)\r\n                console.log(currentPage)\r\n                jQuery.ajax({\r\n                    url: process.env.REACT_APP_API_URL + 'back_snaii/Demandes.php',\r\n                    type: 'POST',\r\n                    data: {\r\n                        query: this.state.filterElement,\r\n                        limit: currentRowsPerPage,\r\n                        page: currentPage\r\n                    },\r\n                    dataType: 'json',\r\n                    success: (code_html, statut) => {\r\n                        console.log(code_html)\r\n                        this.setState({\r\n                            nombreTotalElement: code_html.total,\r\n                            data: code_html.data,\r\n                            pending: false\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    filterSearch(event) {\r\n        this.setState({\r\n            filterElement: event.target.value,\r\n            resetFirstPage: !this.state.resetFirstPage,\r\n            pending: true\r\n        },\r\n            function () {\r\n                jQuery.ajax({\r\n                    url: process.env.REACT_APP_API_URL + 'back_snaii/Demandes.php',\r\n                    type: 'POST',\r\n                    data: {\r\n                        query: this.state.filterElement,\r\n                        limit: this.state.nbrEltperPage,\r\n                        page: 1\r\n                    },\r\n                    dataType: 'json',\r\n                    success: (code_html, statut) => {\r\n                        console.log(code_html)\r\n                        this.setState({\r\n                            nombreTotalElement: code_html.total,\r\n                            data: code_html.data,\r\n                            pending: false\r\n                        });\r\n                    }\r\n                })\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"page-wrapper\" style={{ minHeight: '263px' }}>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row bg-title\">\r\n                        <div className=\"col-lg-12\">\r\n                            <h4 className=\"page-title\">Demandes</h4>\r\n                        </div>\r\n                        {/* /.col-lg-12 */}\r\n                    </div>\r\n                    {/* /.row */}\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"white-box\">\r\n                                <div className=\"mb-0 form-group\">\r\n                                    <div className=\"input-group-alternative input-group\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <i className=\"fas fa-search\"></i>\r\n                                            </span>\r\n                                            <input onChange={(currentRowsPerPage, currentPage) => this.filterSearch(currentRowsPerPage, currentPage)} placeholder=\"Search\" type=\"text\" className=\"search\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <DataTable\r\n                                    columns={this.state.columns}\r\n                                    data={this.state.data}\r\n                                    highlightOnHover={true}\r\n                                    pagination={true}\r\n                                    paginationServer={true}\r\n                                    onChangePage={(page, totalRows) => this.newElement(page, totalRows)}\r\n                                    paginationTotalRows={this.state.nombreTotalElement}\r\n                                    paginationPerPage={this.state.nbrEltperPage}\r\n                                    paginationRowsPerPageOptions={[5, 10, 15, 20, 25]}\r\n                                    onChangeRowsPerPage={(currentRowsPerPage, currentPage) => this.perPage(currentRowsPerPage, currentPage)}\r\n                                    paginationResetDefaultPage={this.state.resetFirstPage}\r\n                                    paginationComponentOptions={{ rowsPerPageText: 'Elements par page:', rangeSeparatorText: 'de', noRowsPerPage: false }}\r\n                                    progressPending={this.state.pending}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Demandes;"]},"metadata":{},"sourceType":"module"}