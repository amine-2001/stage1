{"ast":null,"code":"/* eslint-disable no-loop-func, no-mixed-operators, no-console, no-plusplus, no-underscore-dangle */\nexport function generateData(x = 3, y = 2, z = 1, gData = []) {\n  // x：每一级下的节点总数。y：每级节点里有y个节点、存在子节点。z：树的level层级数（0表示一级）\n  function _loop(_level, _preKey, _tns) {\n    const preKey = _preKey || '0';\n    const tns = _tns || gData;\n    const children = [];\n\n    for (let i = 0; i < x; i++) {\n      const key = `${preKey}-${i}`;\n      tns.push({\n        title: `${key}-label`,\n        key: `${key}-key`\n      });\n\n      if (i < y) {\n        children.push(key);\n      }\n    }\n\n    if (_level < 0) {\n      return tns;\n    }\n\n    const __level = _level - 1;\n\n    children.forEach((key, index) => {\n      tns[index].children = [];\n      return _loop(__level, key, tns[index].children);\n    });\n    return null;\n  }\n\n  _loop(z);\n\n  return gData;\n}\nexport function calcTotal(x = 3, y = 2, z = 1) {\n  /* eslint no-param-reassign:0 */\n  const rec = n => n >= 0 ? x * y ** n-- + rec(n) : 0;\n\n  return rec(z + 1);\n}\nconsole.log('总节点数（单个tree）：', calcTotal()); // 性能测试：总节点数超过 2000（z要小）明显感觉慢。z 变大时，递归多，会卡死。\n\nexport const gData = generateData();\n\nfunction isPositionPrefix(smallPos, bigPos) {\n  if (bigPos.length < smallPos.length) {\n    return false;\n  } // attention: \"0-0-1\" \"0-0-10\"\n\n\n  if (bigPos.length > smallPos.length && bigPos.charAt(smallPos.length) !== '-') {\n    return false;\n  }\n\n  return bigPos.substr(0, smallPos.length) === smallPos;\n} // console.log(isPositionPrefix(\"0-1\", \"0-10-1\"));\n// arr.length === 628, use time: ~20ms\n\n\nexport function filterParentPosition(arr) {\n  const levelObj = {};\n  arr.forEach(item => {\n    const posLen = item.split('-').length;\n\n    if (!levelObj[posLen]) {\n      levelObj[posLen] = [];\n    }\n\n    levelObj[posLen].push(item);\n  });\n  const levelArr = Object.keys(levelObj).sort();\n\n  for (let i = 0; i < levelArr.length; i += 1) {\n    if (levelArr[i + 1]) {\n      levelObj[levelArr[i]].forEach(ii => {\n        for (let j = i + 1; j < levelArr.length; j += 1) {\n          levelObj[levelArr[j]].forEach((_i, index) => {\n            if (isPositionPrefix(ii, _i)) {\n              levelObj[levelArr[j]][index] = null;\n            }\n          });\n          levelObj[levelArr[j]] = levelObj[levelArr[j]].filter(p => p);\n        }\n      });\n    }\n  }\n\n  let nArr = [];\n  levelArr.forEach(i => {\n    nArr = nArr.concat(levelObj[i]);\n  });\n  return nArr;\n} // console.log(filterParentPosition(\n//   ['0-2', '0-3-3', '0-10', '0-10-0', '0-0-1', '0-0', '0-1-1', '0-1']\n// ));\n\nfunction loopData(data, callback) {\n  const loop = (d, level = 0) => {\n    d.forEach((item, index) => {\n      const pos = `${level}-${index}`;\n\n      if (item.children) {\n        loop(item.children, pos);\n      }\n\n      callback(item, index, pos);\n    });\n  };\n\n  loop(data);\n}\n\nfunction spl(str) {\n  return str.split('-');\n}\n\nfunction splitLen(str) {\n  return str.split('-').length;\n}\n\nexport function getFilterExpandedKeys(data, expandedKeys) {\n  const expandedPosArr = [];\n  loopData(data, (item, index, pos) => {\n    if (expandedKeys.indexOf(item.key) > -1) {\n      expandedPosArr.push(pos);\n    }\n  });\n  const filterExpandedKeys = [];\n  loopData(data, (item, index, pos) => {\n    expandedPosArr.forEach(p => {\n      if ((splitLen(pos) < splitLen(p) && p.indexOf(pos) === 0 || pos === p) && filterExpandedKeys.indexOf(item.key) === -1) {\n        filterExpandedKeys.push(item.key);\n      }\n    });\n  });\n  return filterExpandedKeys;\n}\n\nfunction isSibling(pos, pos1) {\n  pos.pop();\n  pos1.pop();\n  return pos.join(',') === pos1.join(',');\n}\n\nexport function getRadioSelectKeys(data, selectedKeys, key) {\n  const res = [];\n  const pkObjArr = [];\n  const selPkObjArr = [];\n  loopData(data, (item, index, pos) => {\n    if (selectedKeys.indexOf(item.key) > -1) {\n      pkObjArr.push([pos, item.key]);\n    }\n\n    if (key && key === item.key) {\n      selPkObjArr.push(pos, item.key);\n    }\n  });\n  const lenObj = {};\n\n  const getPosKey = (pos, k) => {\n    const posLen = splitLen(pos);\n\n    if (!lenObj[posLen]) {\n      lenObj[posLen] = [[pos, k]];\n    } else {\n      lenObj[posLen].forEach((pkArr, i) => {\n        if (isSibling(spl(pkArr[0]), spl(pos))) {\n          // 后来覆盖前者\n          lenObj[posLen][i] = [pos, k];\n        } else if (spl(pkArr[0]) !== spl(pos)) {\n          lenObj[posLen].push([pos, k]);\n        }\n      });\n    }\n  };\n\n  pkObjArr.forEach(pk => {\n    getPosKey(pk[0], pk[1]);\n  });\n\n  if (key) {\n    getPosKey(selPkObjArr[0], selPkObjArr[1]);\n  }\n\n  Object.keys(lenObj).forEach(item => {\n    lenObj[item].forEach(i => {\n      if (res.indexOf(i[1]) === -1) {\n        res.push(i[1]);\n      }\n    });\n  });\n  return res;\n}","map":{"version":3,"sources":["C:/wamp/www/Projet_mediatraining_DEV/mediatraining/src/dataUtil.js"],"names":["generateData","x","y","z","gData","_loop","_level","_preKey","_tns","preKey","tns","children","i","key","push","title","__level","forEach","index","calcTotal","rec","n","console","log","isPositionPrefix","smallPos","bigPos","length","charAt","substr","filterParentPosition","arr","levelObj","item","posLen","split","levelArr","Object","keys","sort","ii","j","_i","filter","p","nArr","concat","loopData","data","callback","loop","d","level","pos","spl","str","splitLen","getFilterExpandedKeys","expandedKeys","expandedPosArr","indexOf","filterExpandedKeys","isSibling","pos1","pop","join","getRadioSelectKeys","selectedKeys","res","pkObjArr","selPkObjArr","lenObj","getPosKey","k","pkArr","pk"],"mappings":"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","sourcesContent":["/* eslint-disable no-loop-func, no-mixed-operators, no-console, no-plusplus, no-underscore-dangle */\r\n\r\nexport function generateData(x = 3, y = 2, z = 1, gData = []) {\r\n    // x：每一级下的节点总数。y：每级节点里有y个节点、存在子节点。z：树的level层级数（0表示一级）\r\n    function _loop(_level, _preKey, _tns) {\r\n      const preKey = _preKey || '0';\r\n      const tns = _tns || gData;\r\n  \r\n      const children = [];\r\n      for (let i = 0; i < x; i++) {\r\n        const key = `${preKey}-${i}`;\r\n        tns.push({ title: `${key}-label`, key: `${key}-key` });\r\n        if (i < y) {\r\n          children.push(key);\r\n        }\r\n      }\r\n      if (_level < 0) {\r\n        return tns;\r\n      }\r\n      const __level = _level - 1;\r\n      children.forEach((key, index) => {\r\n        tns[index].children = [];\r\n        return _loop(__level, key, tns[index].children);\r\n      });\r\n  \r\n      return null;\r\n    }\r\n    _loop(z);\r\n    return gData;\r\n  }\r\n  export function calcTotal(x = 3, y = 2, z = 1) {\r\n    /* eslint no-param-reassign:0 */\r\n    const rec = n => (n >= 0 ? x * y ** n-- + rec(n) : 0);\r\n    return rec(z + 1);\r\n  }\r\n  console.log('总节点数（单个tree）：', calcTotal());\r\n  // 性能测试：总节点数超过 2000（z要小）明显感觉慢。z 变大时，递归多，会卡死。\r\n  \r\n  export const gData = generateData();\r\n  \r\n  function isPositionPrefix(smallPos, bigPos) {\r\n    if (bigPos.length < smallPos.length) {\r\n      return false;\r\n    }\r\n    // attention: \"0-0-1\" \"0-0-10\"\r\n    if (bigPos.length > smallPos.length && bigPos.charAt(smallPos.length) !== '-') {\r\n      return false;\r\n    }\r\n    return bigPos.substr(0, smallPos.length) === smallPos;\r\n  }\r\n  // console.log(isPositionPrefix(\"0-1\", \"0-10-1\"));\r\n  \r\n  // arr.length === 628, use time: ~20ms\r\n  export function filterParentPosition(arr) {\r\n    const levelObj = {};\r\n    arr.forEach(item => {\r\n      const posLen = item.split('-').length;\r\n      if (!levelObj[posLen]) {\r\n        levelObj[posLen] = [];\r\n      }\r\n      levelObj[posLen].push(item);\r\n    });\r\n    const levelArr = Object.keys(levelObj).sort();\r\n    for (let i = 0; i < levelArr.length; i += 1) {\r\n      if (levelArr[i + 1]) {\r\n        levelObj[levelArr[i]].forEach(ii => {\r\n          for (let j = i + 1; j < levelArr.length; j += 1) {\r\n            levelObj[levelArr[j]].forEach((_i, index) => {\r\n              if (isPositionPrefix(ii, _i)) {\r\n                levelObj[levelArr[j]][index] = null;\r\n              }\r\n            });\r\n            levelObj[levelArr[j]] = levelObj[levelArr[j]].filter(p => p);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    let nArr = [];\r\n    levelArr.forEach(i => {\r\n      nArr = nArr.concat(levelObj[i]);\r\n    });\r\n    return nArr;\r\n  }\r\n  // console.log(filterParentPosition(\r\n  //   ['0-2', '0-3-3', '0-10', '0-10-0', '0-0-1', '0-0', '0-1-1', '0-1']\r\n  // ));\r\n  \r\n  function loopData(data, callback) {\r\n    const loop = (d, level = 0) => {\r\n      d.forEach((item, index) => {\r\n        const pos = `${level}-${index}`;\r\n        if (item.children) {\r\n          loop(item.children, pos);\r\n        }\r\n        callback(item, index, pos);\r\n      });\r\n    };\r\n    loop(data);\r\n  }\r\n  \r\n  function spl(str) {\r\n    return str.split('-');\r\n  }\r\n  function splitLen(str) {\r\n    return str.split('-').length;\r\n  }\r\n  \r\n  export function getFilterExpandedKeys(data, expandedKeys) {\r\n    const expandedPosArr = [];\r\n    loopData(data, (item, index, pos) => {\r\n      if (expandedKeys.indexOf(item.key) > -1) {\r\n        expandedPosArr.push(pos);\r\n      }\r\n    });\r\n    const filterExpandedKeys = [];\r\n    loopData(data, (item, index, pos) => {\r\n      expandedPosArr.forEach(p => {\r\n        if (\r\n          ((splitLen(pos) < splitLen(p) && p.indexOf(pos) === 0) || pos === p) &&\r\n          filterExpandedKeys.indexOf(item.key) === -1\r\n        ) {\r\n          filterExpandedKeys.push(item.key);\r\n        }\r\n      });\r\n    });\r\n    return filterExpandedKeys;\r\n  }\r\n  \r\n  function isSibling(pos, pos1) {\r\n    pos.pop();\r\n    pos1.pop();\r\n    return pos.join(',') === pos1.join(',');\r\n  }\r\n  \r\n  export function getRadioSelectKeys(data, selectedKeys, key) {\r\n    const res = [];\r\n    const pkObjArr = [];\r\n    const selPkObjArr = [];\r\n    loopData(data, (item, index, pos) => {\r\n      if (selectedKeys.indexOf(item.key) > -1) {\r\n        pkObjArr.push([pos, item.key]);\r\n      }\r\n      if (key && key === item.key) {\r\n        selPkObjArr.push(pos, item.key);\r\n      }\r\n    });\r\n    const lenObj = {};\r\n    const getPosKey = (pos, k) => {\r\n      const posLen = splitLen(pos);\r\n      if (!lenObj[posLen]) {\r\n        lenObj[posLen] = [[pos, k]];\r\n      } else {\r\n        lenObj[posLen].forEach((pkArr, i) => {\r\n          if (isSibling(spl(pkArr[0]), spl(pos))) {\r\n            // 后来覆盖前者\r\n            lenObj[posLen][i] = [pos, k];\r\n          } else if (spl(pkArr[0]) !== spl(pos)) {\r\n            lenObj[posLen].push([pos, k]);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    pkObjArr.forEach(pk => {\r\n      getPosKey(pk[0], pk[1]);\r\n    });\r\n    if (key) {\r\n      getPosKey(selPkObjArr[0], selPkObjArr[1]);\r\n    }\r\n  \r\n    Object.keys(lenObj).forEach(item => {\r\n      lenObj[item].forEach(i => {\r\n        if (res.indexOf(i[1]) === -1) {\r\n          res.push(i[1]);\r\n        }\r\n      });\r\n    });\r\n    return res;\r\n  }"]},"metadata":{},"sourceType":"module"}