{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp\\\\www\\\\magasin_dev\\\\mediatraining\\\\src\\\\AjoutMagasin.js\";\n// import React, { useRef, Component } from 'react'\n// import axios from 'axios'\n// import jQuery from 'jquery'\n// import { Link, BrowserRouter as Router, Route, Switch, withRouter, HashRouter, Redirect } from 'react-router-dom'\n// import Select from 'react-select';\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// import { Slide, Zoom, Flip, Bounce } from 'react-toastify';\n// import Geosuggest from 'react-geosuggest';\n// const geosuggestEl = useRef(null);\n// const fixtures = [\n//     { label: 'New York', location: { lat: 40.7033127, lng: -73.979681 } },\n//     { label: 'Rio', location: { lat: -22.066452, lng: -42.9232368 } },\n//     { label: 'Tokyo', location: { lat: 35.673343, lng: 139.710388 } }\n// ];\n// const onSuggestSelect = (suggest) => console.log(suggest);\n// class AjoutMagasin extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             enseignes: [],\n//             selectedEnseigne: '',\n//             magasin: '',\n//             code: '',\n//             tel: '',\n//             adresse: '',\n//             articles: [],\n//             selectedArticle: ''\n//         }\n//     }\n//     componentDidMount() {\n//         if (JSON.parse((localStorage.getItem('userPermissions'))) != null) {\n//             axios.get(process.env.REACT_APP_API_URL + 'Back_magasin/SelectEnseignes.php').then(res => {\n//                 console.log(res)\n//                 this.setState({\n//                     enseignes: res.data\n//                 })\n//             })\n//             axios.get(process.env.REACT_APP_API_URL + 'Back_magasin/SelectArticles.php').then(res => {\n//                 console.log(res)\n//                 this.setState({\n//                     articles: res.data\n//                 })\n//             })\n//         }\n//         else {\n//             document.location = '/'\n//         }\n//     }\n//     addEnseigne = selectedEnseigne => {\n//         if (selectedEnseigne != null) {\n//             this.setState({ selectedEnseigne: selectedEnseigne });\n//         }\n//         else {\n//             this.setState({ selectedEnseigne: '' });\n//         }\n//     }\n//     addMagasin = (event) => {\n//         this.setState({\n//             magasin: event.target.value\n//         });\n//     }\n//     addCode = (event) => {\n//         this.setState({\n//             code: event.target.value\n//         });\n//     }\n//     addTel = (event) => {\n//         this.setState({\n//             tel: event.target.value\n//         });\n//     }\n//     // addAdresse = (event) => {\n//     // }\n//     addArticle = selectedArticle => {\n//         if (selectedArticle != null) {\n//             this.setState({ selectedArticle: selectedArticle });\n//         }\n//         else {\n//             this.setState({ selectedArticle: '' });\n//         }\n//     };\n//     ajout = () => {\n//         if (this.state.selectedEnseigne != '' && this.state.magasin != '' && this.state.selectedArticle != '') {\n//             jQuery.ajax({\n//                 url: process.env.REACT_APP_API_URL + 'Back_magasin/AddMagasin.php',\n//                 type: 'POST',\n//                 data: {\n//                     enseigneId: this.state.selectedEnseigne.value,\n//                     magasin: this.state.magasin,\n//                     code: this.state.code,\n//                     tel: this.state.tel,\n//                     // adresse: this.state.adresse,\n//                     arrayArticles: this.state.selectedArticle\n//                 },\n//                 dataType: 'json',\n//                 success: (code_html, statut) => {\n//                     if (code_html.Result == \"OK\") {\n//                         this.props.history.push('/Magasins');\n//                     }\n//                     else if (code_html.Result == \"KO\") {\n//                         alert(\"erreur,l'un de vos champs est vide!!\");\n//                     }\n//                 }\n//             });\n//         }\n//         else {\n//             toast.error('â›” Veuillez verifier les champs enseigne,magasin et articles !!', { containerId: 'A' });\n//         }\n//     }\n//     render() {\n//         return (\n//             <div id=\"page-wrapper\" style={{ minHeight: '263px', marginLeft: '0px' }}>\n//                 <div className=\"container-fluid\">\n//                     <div className=\"row bg-title\">\n//                         <div className=\"col-lg-12\">\n//                             <h4 className=\"page-title\">Ajout magasin</h4>\n//                         </div>\n//                         {/* /.col-lg-12 */}\n//                     </div>\n//                     {/* /.row */}\n//                     <div className=\"row\">\n//                         <div className=\"col-sm-12\">\n//                             <div className=\"white-box\">\n//                                 <div style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center', marginBottom: '10px', marginRight: '20px' }}>\n//                                     <Link to=\"/Magasins\" > <button style={{ background: '#DC143C', border: '1px solid #DC143C', borderRadius: '5px' }} type=\"button\" className=\"btn btn-info\"> <i style={{ paddingRight: '5px' }} className=\"fas fa-arrow-circle-left\"></i>Retour</button></Link>\n//                                 </div>\n//                                 <div className=\"row\">\n//                                     <div className=\"col-md-6\">\n//                                         <div className=\"form-group\">\n//                                             <label>Enseigne</label>\n//                                             <Select\n//                                                 isClearable={true}\n//                                                 isSearchable={true}\n//                                                 onChange={this.addEnseigne}\n//                                                 options={this.state.enseignes}\n//                                             />\n//                                         </div>\n//                                     </div>\n//                                     <div className=\"col-md-6\">\n//                                         <div className=\"form-group\">\n//                                             <label>Magasin</label>\n//                                             <input type=\"text\" className=\"form-control\" placeholder=\"Magasin\" onChange={this.addMagasin} style={{ borderRadius: '5px', border: 'solid 1px #B3B3B3' }} />\n//                                         </div>\n//                                     </div>\n//                                     <div className=\"col-md-6\">\n//                                         <div className=\"form-group\">\n//                                             <label>Code</label>\n//                                             <input type=\"text\" className=\"form-control\" placeholder=\"code\" onChange={this.addCode} style={{ borderRadius: '5px', border: 'solid 1px #B3B3B3' }} />\n//                                         </div>\n//                                     </div>\n//                                     <div className=\"col-md-6\">\n//                                         <div className=\"form-group\">\n//                                             <label>Tel</label>\n//                                             <input type=\"text\" className=\"form-control\" placeholder=\"tel\" onChange={this.addTel} style={{ borderRadius: '5px', border: 'solid 1px #B3B3B3' }} />\n//                                         </div>\n//                                     </div>\n//                                     <div className=\"col-md-6\">\n//                                         <div className=\"form-group\">\n//                                             <label>Articles</label>\n//                                             <Select\n//                                                 isMulti={true}\n//                                                 isClearable={true}\n//                                                 isSearchable={true}\n//                                                 onChange={this.addArticle}\n//                                                 options={this.state.articles}\n//                                             />\n//                                         </div>\n//                                     </div>\n//                                     <Geosuggest\n//                                         ref={geosuggestEl}\n//                                         placeholder=\"Start typing!\"\n//                                         initialValue=\"Hamburg\"\n//                                         fixtures={fixtures}\n//                                         onSuggestSelect={onSuggestSelect}\n//                                         radius=\"20\" />\n//                                 </div>\n//                                 <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '10px' }}>\n//                                     <button style={{ borderRadius: '5px' }} type=\"button\" className=\"btn btn-success\" onClick={this.ajout}>Confirmer</button>\n//                                 </div>\n//                             </div>\n//                         </div>\n//                     </div>\n//                     <ToastContainer transition={Flip} enableMultiContainer containerId={'A'} position={toast.POSITION.TOP_RIGHT} autoClose={2500} />\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n// export default withRouter(AjoutMagasin);\nimport React from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\n\nclass AjoutMagasin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = address => {\n      this.setState({\n        address,\n        latitude: null,\n        longitude: null,\n        errorMessage: ''\n      });\n    };\n\n    this.handleSelect = selected => {\n      this.setState({\n        isGeocoding: true,\n        address: selected\n      });\n      geocodeByAddress(selected).then(res => getLatLng(res[0])).then(({\n        lat,\n        lng\n      }) => {\n        this.setState({\n          latitude: lat,\n          longitude: lng,\n          isGeocoding: false\n        });\n      }).catch(error => {\n        this.setState({\n          isGeocoding: false\n        });\n        console.log('error', error); // eslint-disable-line no-console\n      });\n    };\n\n    this.handleCloseClick = () => {\n      this.setState({\n        address: '',\n        latitude: null,\n        longitude: null\n      });\n    };\n\n    this.handleError = (status, clearSuggestions) => {\n      console.log('Error from Google Maps API', status); // eslint-disable-line no-console\n\n      this.setState({\n        errorMessage: status\n      }, () => {\n        clearSuggestions();\n      });\n    };\n\n    this.initMap = () => {\n      this.setState({\n        gmapsLoaded: true\n      }, () => {\n        console.log('yes');\n      });\n    };\n\n    this.handleSelect = address => {\n      geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => console.log('Success', latLng)).catch(error => console.error('Error', error));\n    };\n\n    this.state = {\n      address: '',\n      errorMessage: '',\n      latitude: null,\n      longitude: null,\n      isGeocoding: false,\n      gmapsLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    window.initMap = this.initMap;\n    const gmapScriptEl = document.createElement(`script`);\n    gmapScriptEl.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyCoq4_-BeKtYRIs-3FjJL721G1eP5DaU0g&libraries=places&callback=initMap`;\n    document.querySelector(`body`).insertAdjacentElement(`beforeend`, gmapScriptEl);\n  }\n\n  render() {\n    const {\n      address,\n      errorMessage,\n      latitude,\n      longitude,\n      isGeocoding\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, this.state.gmapsLoaded && React.createElement(PlacesAutocomplete, {\n      onChange: this.handleChange,\n      value: address,\n      onSelect: this.handleSelect,\n      onError: this.handleError,\n      shouldFetchSuggestions: address.length > 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps\n    }) => {\n      return React.createElement(\"div\", {\n        className: \"Demo__search-bar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Demo__search-input-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({}, getInputProps({\n        placeholder: 'Search Places...',\n        className: 'Demo__search-input'\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      })), this.state.address.length > 0 && React.createElement(\"button\", {\n        className: \"Demo__clear-button\",\n        onClick: this.handleCloseClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"x\")));\n    }), errorMessage.length > 0 && React.createElement(\"div\", {\n      className: \"Demo__error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, this.state.errorMessage), (latitude && longitude || isGeocoding) && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"Demo__geocode-result-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"Geocode result\"), isGeocoding ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-spinner fa-pulse fa-3x fa-fw Demo__spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Demo__geocode-result-item--lat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Latitude:\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, latitude)), React.createElement(\"div\", {\n      className: \"Demo__geocode-result-item--lng\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"Longitude:\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, longitude)))));\n  }\n\n}\n\nexport default AjoutMagasin;","map":{"version":3,"sources":["C:/wamp/www/magasin_dev/mediatraining/src/AjoutMagasin.js"],"names":["React","PlacesAutocomplete","geocodeByAddress","getLatLng","AjoutMagasin","Component","constructor","props","handleChange","address","setState","latitude","longitude","errorMessage","handleSelect","selected","isGeocoding","then","res","lat","lng","catch","error","console","log","handleCloseClick","handleError","status","clearSuggestions","initMap","gmapsLoaded","results","latLng","state","componentDidMount","window","gmapScriptEl","document","createElement","src","querySelector","insertAdjacentElement","render","length","getInputProps","suggestions","getSuggestionItemProps","placeholder","className"],"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","sourcesContent":["// import React, { useRef, Component } from 'react'\r\n// import axios from 'axios'\r\n// import jQuery from 'jquery'\r\n// import { Link, BrowserRouter as Router, Route, Switch, withRouter, HashRouter, Redirect } from 'react-router-dom'\r\n// import Select from 'react-select';\r\n// import { ToastContainer, toast } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n// import { Slide, Zoom, Flip, Bounce } from 'react-toastify';\r\n// import Geosuggest from 'react-geosuggest';\r\n\r\n// const geosuggestEl = useRef(null);\r\n\r\n// const fixtures = [\r\n//     { label: 'New York', location: { lat: 40.7033127, lng: -73.979681 } },\r\n//     { label: 'Rio', location: { lat: -22.066452, lng: -42.9232368 } },\r\n//     { label: 'Tokyo', location: { lat: 35.673343, lng: 139.710388 } }\r\n// ];\r\n\r\n// const onSuggestSelect = (suggest) => console.log(suggest);\r\n\r\n// class AjoutMagasin extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             enseignes: [],\r\n//             selectedEnseigne: '',\r\n//             magasin: '',\r\n//             code: '',\r\n//             tel: '',\r\n//             adresse: '',\r\n//             articles: [],\r\n//             selectedArticle: ''\r\n//         }\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         if (JSON.parse((localStorage.getItem('userPermissions'))) != null) {\r\n//             axios.get(process.env.REACT_APP_API_URL + 'Back_magasin/SelectEnseignes.php').then(res => {\r\n//                 console.log(res)\r\n//                 this.setState({\r\n//                     enseignes: res.data\r\n//                 })\r\n//             })\r\n//             axios.get(process.env.REACT_APP_API_URL + 'Back_magasin/SelectArticles.php').then(res => {\r\n//                 console.log(res)\r\n//                 this.setState({\r\n//                     articles: res.data\r\n//                 })\r\n//             })\r\n//         }\r\n//         else {\r\n//             document.location = '/'\r\n//         }\r\n//     }\r\n\r\n//     addEnseigne = selectedEnseigne => {\r\n//         if (selectedEnseigne != null) {\r\n//             this.setState({ selectedEnseigne: selectedEnseigne });\r\n//         }\r\n//         else {\r\n//             this.setState({ selectedEnseigne: '' });\r\n//         }\r\n//     }\r\n\r\n//     addMagasin = (event) => {\r\n//         this.setState({\r\n//             magasin: event.target.value\r\n//         });\r\n//     }\r\n\r\n//     addCode = (event) => {\r\n//         this.setState({\r\n//             code: event.target.value\r\n//         });\r\n//     }\r\n\r\n//     addTel = (event) => {\r\n//         this.setState({\r\n//             tel: event.target.value\r\n//         });\r\n//     }\r\n\r\n//     // addAdresse = (event) => {\r\n//     // }\r\n\r\n//     addArticle = selectedArticle => {\r\n//         if (selectedArticle != null) {\r\n//             this.setState({ selectedArticle: selectedArticle });\r\n//         }\r\n//         else {\r\n//             this.setState({ selectedArticle: '' });\r\n//         }\r\n//     };\r\n\r\n//     ajout = () => {\r\n//         if (this.state.selectedEnseigne != '' && this.state.magasin != '' && this.state.selectedArticle != '') {\r\n//             jQuery.ajax({\r\n//                 url: process.env.REACT_APP_API_URL + 'Back_magasin/AddMagasin.php',\r\n//                 type: 'POST',\r\n//                 data: {\r\n//                     enseigneId: this.state.selectedEnseigne.value,\r\n//                     magasin: this.state.magasin,\r\n//                     code: this.state.code,\r\n//                     tel: this.state.tel,\r\n//                     // adresse: this.state.adresse,\r\n//                     arrayArticles: this.state.selectedArticle\r\n//                 },\r\n//                 dataType: 'json',\r\n//                 success: (code_html, statut) => {\r\n//                     if (code_html.Result == \"OK\") {\r\n//                         this.props.history.push('/Magasins');\r\n//                     }\r\n//                     else if (code_html.Result == \"KO\") {\r\n//                         alert(\"erreur,l'un de vos champs est vide!!\");\r\n//                     }\r\n//                 }\r\n//             });\r\n//         }\r\n//         else {\r\n//             toast.error('â›” Veuillez verifier les champs enseigne,magasin et articles !!', { containerId: 'A' });\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div id=\"page-wrapper\" style={{ minHeight: '263px', marginLeft: '0px' }}>\r\n//                 <div className=\"container-fluid\">\r\n//                     <div className=\"row bg-title\">\r\n//                         <div className=\"col-lg-12\">\r\n//                             <h4 className=\"page-title\">Ajout magasin</h4>\r\n//                         </div>\r\n//                         {/* /.col-lg-12 */}\r\n//                     </div>\r\n//                     {/* /.row */}\r\n//                     <div className=\"row\">\r\n//                         <div className=\"col-sm-12\">\r\n//                             <div className=\"white-box\">\r\n//                                 <div style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center', marginBottom: '10px', marginRight: '20px' }}>\r\n//                                     <Link to=\"/Magasins\" > <button style={{ background: '#DC143C', border: '1px solid #DC143C', borderRadius: '5px' }} type=\"button\" className=\"btn btn-info\"> <i style={{ paddingRight: '5px' }} className=\"fas fa-arrow-circle-left\"></i>Retour</button></Link>\r\n//                                 </div>\r\n//                                 <div className=\"row\">\r\n//                                     <div className=\"col-md-6\">\r\n//                                         <div className=\"form-group\">\r\n//                                             <label>Enseigne</label>\r\n//                                             <Select\r\n//                                                 isClearable={true}\r\n//                                                 isSearchable={true}\r\n//                                                 onChange={this.addEnseigne}\r\n//                                                 options={this.state.enseignes}\r\n//                                             />\r\n//                                         </div>\r\n//                                     </div>\r\n//                                     <div className=\"col-md-6\">\r\n//                                         <div className=\"form-group\">\r\n//                                             <label>Magasin</label>\r\n//                                             <input type=\"text\" className=\"form-control\" placeholder=\"Magasin\" onChange={this.addMagasin} style={{ borderRadius: '5px', border: 'solid 1px #B3B3B3' }} />\r\n//                                         </div>\r\n//                                     </div>\r\n//                                     <div className=\"col-md-6\">\r\n//                                         <div className=\"form-group\">\r\n//                                             <label>Code</label>\r\n//                                             <input type=\"text\" className=\"form-control\" placeholder=\"code\" onChange={this.addCode} style={{ borderRadius: '5px', border: 'solid 1px #B3B3B3' }} />\r\n//                                         </div>\r\n//                                     </div>\r\n//                                     <div className=\"col-md-6\">\r\n//                                         <div className=\"form-group\">\r\n//                                             <label>Tel</label>\r\n//                                             <input type=\"text\" className=\"form-control\" placeholder=\"tel\" onChange={this.addTel} style={{ borderRadius: '5px', border: 'solid 1px #B3B3B3' }} />\r\n//                                         </div>\r\n//                                     </div>\r\n//                                     <div className=\"col-md-6\">\r\n//                                         <div className=\"form-group\">\r\n//                                             <label>Articles</label>\r\n//                                             <Select\r\n//                                                 isMulti={true}\r\n//                                                 isClearable={true}\r\n//                                                 isSearchable={true}\r\n//                                                 onChange={this.addArticle}\r\n//                                                 options={this.state.articles}\r\n//                                             />\r\n//                                         </div>\r\n//                                     </div>\r\n//                                     <Geosuggest\r\n//                                         ref={geosuggestEl}\r\n//                                         placeholder=\"Start typing!\"\r\n//                                         initialValue=\"Hamburg\"\r\n//                                         fixtures={fixtures}\r\n//                                         onSuggestSelect={onSuggestSelect}\r\n//                                         radius=\"20\" />\r\n//                                 </div>\r\n//                                 <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '10px' }}>\r\n//                                     <button style={{ borderRadius: '5px' }} type=\"button\" className=\"btn btn-success\" onClick={this.ajout}>Confirmer</button>\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                     <ToastContainer transition={Flip} enableMultiContainer containerId={'A'} position={toast.POSITION.TOP_RIGHT} autoClose={2500} />\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default withRouter(AjoutMagasin);\r\n\r\nimport React from 'react';\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from 'react-places-autocomplete';\r\n\r\n \r\nclass AjoutMagasin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { address: '',\r\n    errorMessage: '',\r\n    latitude: null,\r\n    longitude: null,\r\n    isGeocoding: false,  gmapsLoaded: false}\r\n  }\r\n \r\n  handleChange = address => {\r\n    this.setState({\r\n      address,\r\n      latitude: null,\r\n      longitude: null,\r\n      errorMessage: '',\r\n    });\r\n  };\r\n\r\n  handleSelect = selected => {\r\n    this.setState({ isGeocoding: true, address: selected });\r\n    geocodeByAddress(selected)\r\n      .then(res => getLatLng(res[0]))\r\n      .then(({ lat, lng }) => {\r\n        this.setState({\r\n          latitude: lat,\r\n          longitude: lng,\r\n          isGeocoding: false,\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ isGeocoding: false });\r\n        console.log('error', error); // eslint-disable-line no-console\r\n      });\r\n  };\r\n\r\n  handleCloseClick = () => {\r\n    this.setState({\r\n      address: '',\r\n      latitude: null,\r\n      longitude: null,\r\n    });\r\n  };\r\n\r\n  handleError = (status, clearSuggestions) => {\r\n    console.log('Error from Google Maps API', status); // eslint-disable-line no-console\r\n    this.setState({ errorMessage: status }, () => {\r\n      clearSuggestions();\r\n    });\r\n  };\r\n\r\n  initMap = () => {\r\n    this.setState({\r\n      gmapsLoaded: true,\r\n    },()=>{\r\n        console.log('yes')\r\n    })\r\n  }\r\n \r\n  handleSelect = address => {\r\n    geocodeByAddress(address)\r\n      .then(results => getLatLng(results[0]))\r\n      .then(latLng => console.log('Success', latLng))\r\n      .catch(error => console.error('Error', error));\r\n  };\r\n\r\n  \r\ncomponentDidMount () {\r\n    window.initMap = this.initMap\r\n    const gmapScriptEl = document.createElement(`script`)\r\n    gmapScriptEl.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyCoq4_-BeKtYRIs-3FjJL721G1eP5DaU0g&libraries=places&callback=initMap`\r\n    document.querySelector(`body`).insertAdjacentElement(`beforeend`, gmapScriptEl)\r\n  }\r\n \r\n  render() {\r\n    const {\r\n      address,\r\n      errorMessage,\r\n      latitude,\r\n      longitude,\r\n      isGeocoding,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n            {this.state.gmapsLoaded && (\r\n        <PlacesAutocomplete\r\n          onChange={this.handleChange}\r\n          value={address}\r\n          onSelect={this.handleSelect}\r\n          onError={this.handleError}\r\n          shouldFetchSuggestions={address.length > 2}\r\n        >\r\n          {({ getInputProps, suggestions, getSuggestionItemProps }) => {\r\n            return (\r\n              <div className=\"Demo__search-bar-container\">\r\n                <div className=\"Demo__search-input-container\">\r\n                  <input\r\n                    {...getInputProps({\r\n                      placeholder: 'Search Places...',\r\n                      className: 'Demo__search-input',\r\n                    })}\r\n                  />\r\n                  {this.state.address.length > 0 && (\r\n                    <button\r\n                      className=\"Demo__clear-button\"\r\n                      onClick={this.handleCloseClick}\r\n                    >\r\n                      x\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                \r\n              </div>\r\n            );\r\n          }}\r\n        </PlacesAutocomplete>\r\n         )}\r\n        {errorMessage.length > 0 && (\r\n          <div className=\"Demo__error-message\">{this.state.errorMessage}</div>\r\n        )}\r\n\r\n        {((latitude && longitude) || isGeocoding) && (\r\n          <div>\r\n            <h3 className=\"Demo__geocode-result-header\">Geocode result</h3>\r\n            {isGeocoding ? (\r\n              <div>\r\n                <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw Demo__spinner\" />\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <div className=\"Demo__geocode-result-item--lat\">\r\n                  <label>Latitude:</label>\r\n                  <span>{latitude}</span>\r\n                </div>\r\n                <div className=\"Demo__geocode-result-item--lng\">\r\n                  <label>Longitude:</label>\r\n                  <span>{longitude}</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default AjoutMagasin;\r\n"]},"metadata":{},"sourceType":"module"}