{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = allowedValuesValidator;\n\nvar _SimpleSchema = require(\"../SimpleSchema\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash.includes\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction allowedValuesValidator() {\n  if (!this.valueShouldBeChecked) return;\n  var allowedValues = this.definition.allowedValues;\n  if (!allowedValues) return;\n  var isAllowed; // set defined in scope and allowedValues is its instance\n\n  if (typeof Set === 'function' && allowedValues instanceof Set) {\n    isAllowed = allowedValues.has(this.value);\n  } else {\n    isAllowed = (0, _lodash[\"default\"])(allowedValues, this.value);\n  }\n\n  return isAllowed ? true : _SimpleSchema.SimpleSchema.ErrorTypes.VALUE_NOT_ALLOWED;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["C:/wamp/www/Projet_snaii_DEV/snaii/node_modules/simpl-schema/dist/validation/allowedValuesValidator.js"],"names":["Object","defineProperty","exports","value","allowedValuesValidator","_SimpleSchema","require","_lodash","_interopRequireDefault","obj","__esModule","valueShouldBeChecked","allowedValues","definition","isAllowed","Set","has","SimpleSchema","ErrorTypes","VALUE_NOT_ALLOWED","module","default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,sBAArB;;AAEA,IAAIC,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA3B;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACF,OAAO,CAAC,iBAAD,CAAR,CAApC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,SAASL,sBAAT,GAAkC;AAChC,MAAI,CAAC,KAAKO,oBAAV,EAAgC;AAChC,MAAIC,aAAa,GAAG,KAAKC,UAAL,CAAgBD,aAApC;AACA,MAAI,CAACA,aAAL,EAAoB;AACpB,MAAIE,SAAJ,CAJgC,CAIjB;;AAEf,MAAI,OAAOC,GAAP,KAAe,UAAf,IAA6BH,aAAa,YAAYG,GAA1D,EAA+D;AAC7DD,IAAAA,SAAS,GAAGF,aAAa,CAACI,GAAd,CAAkB,KAAKb,KAAvB,CAAZ;AACD,GAFD,MAEO;AACLW,IAAAA,SAAS,GAAG,CAAC,GAAGP,OAAO,CAAC,SAAD,CAAX,EAAwBK,aAAxB,EAAuC,KAAKT,KAA5C,CAAZ;AACD;;AAED,SAAOW,SAAS,GAAG,IAAH,GAAUT,aAAa,CAACY,YAAd,CAA2BC,UAA3B,CAAsCC,iBAAhE;AACD;;AAEDC,MAAM,CAAClB,OAAP,GAAiBA,OAAO,CAACmB,OAAzB;AACAD,MAAM,CAAClB,OAAP,CAAemB,OAAf,GAAyBnB,OAAO,CAACmB,OAAjC","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = allowedValuesValidator;\n\nvar _SimpleSchema = require(\"../SimpleSchema\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash.includes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction allowedValuesValidator() {\n  if (!this.valueShouldBeChecked) return;\n  var allowedValues = this.definition.allowedValues;\n  if (!allowedValues) return;\n  var isAllowed; // set defined in scope and allowedValues is its instance\n\n  if (typeof Set === 'function' && allowedValues instanceof Set) {\n    isAllowed = allowedValues.has(this.value);\n  } else {\n    isAllowed = (0, _lodash[\"default\"])(allowedValues, this.value);\n  }\n\n  return isAllowed ? true : _SimpleSchema.SimpleSchema.ErrorTypes.VALUE_NOT_ALLOWED;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}