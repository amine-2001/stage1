{"ast":null,"code":"import { __rest } from \"tslib\";\nimport React, { Children } from 'react';\nimport classnames from 'classnames';\nimport { connectField, filterDOMProps, joinName } from 'uniforms';\nimport ListItemField from './ListItemField';\nimport ListAddField from './ListAddField';\n\nconst List = _a => {\n  var {\n    addIcon,\n    children,\n    className,\n    error,\n    errorMessage,\n    initialCount,\n    itemProps,\n    label,\n    name,\n    removeIcon,\n    showInlineError,\n    value\n  } = _a,\n      props = __rest(_a, [\"addIcon\", \"children\", \"className\", \"error\", \"errorMessage\", \"initialCount\", \"itemProps\", \"label\", \"name\", \"removeIcon\", \"showInlineError\", \"value\"]);\n\n  return React.createElement(\"div\", Object.assign({\n    className: classnames('card mb-3', className)\n  }, filterDOMProps(props)), React.createElement(\"div\", {\n    className: \"card-body\"\n  }, label && React.createElement(\"div\", {\n    className: \"card-title\"\n  }, React.createElement(\"label\", {\n    className: \"col-form-label\"\n  }, label, \"\\u00A0\"), React.createElement(ListAddField, {\n    name: `${name}.$`,\n    initialCount: initialCount,\n    addIcon: addIcon\n  }), !!(error && showInlineError) && React.createElement(\"span\", {\n    className: \"text-danger\"\n  }, errorMessage)), children ? value.map((item, index) => Children.map(children, child => React.cloneElement(child, {\n    key: index,\n    label: null,\n    name: joinName(name, child.props.name && child.props.name.replace('$', index)),\n    removeIcon\n  }))) : value.map((item, index) => React.createElement(ListItemField, Object.assign({\n    key: index,\n    label: null,\n    name: joinName(name, index),\n    removeIcon: removeIcon\n  }, itemProps)))));\n};\n\nexport default connectField(List, {\n  ensureValue: false,\n  includeInChain: false\n});","map":{"version":3,"sources":["C:/wamp/www/Projet_snaii_DEV/snaii/node_modules/uniforms-bootstrap4/es6/ListField.js"],"names":["__rest","React","Children","classnames","connectField","filterDOMProps","joinName","ListItemField","ListAddField","List","_a","addIcon","children","className","error","errorMessage","initialCount","itemProps","label","name","removeIcon","showInlineError","value","props","createElement","Object","assign","map","item","index","child","cloneElement","key","replace","ensureValue","includeInChain"],"mappings":"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","sourcesContent":["import { __rest } from \"tslib\";\nimport React, { Children } from 'react';\nimport classnames from 'classnames';\nimport { connectField, filterDOMProps, joinName } from 'uniforms';\nimport ListItemField from './ListItemField';\nimport ListAddField from './ListAddField';\nconst List = (_a) => {\n    var { addIcon, children, className, error, errorMessage, initialCount, itemProps, label, name, removeIcon, showInlineError, value } = _a, props = __rest(_a, [\"addIcon\", \"children\", \"className\", \"error\", \"errorMessage\", \"initialCount\", \"itemProps\", \"label\", \"name\", \"removeIcon\", \"showInlineError\", \"value\"]);\n    return (React.createElement(\"div\", Object.assign({ className: classnames('card mb-3', className) }, filterDOMProps(props)),\n        React.createElement(\"div\", { className: \"card-body\" },\n            label && (React.createElement(\"div\", { className: \"card-title\" },\n                React.createElement(\"label\", { className: \"col-form-label\" },\n                    label,\n                    \"\\u00A0\"),\n                React.createElement(ListAddField, { name: `${name}.$`, initialCount: initialCount, addIcon: addIcon }),\n                !!(error && showInlineError) && (React.createElement(\"span\", { className: \"text-danger\" }, errorMessage)))),\n            children\n                ? value.map((item, index) => Children.map(children, child => React.cloneElement(child, {\n                    key: index,\n                    label: null,\n                    name: joinName(name, child.props.name && child.props.name.replace('$', index)),\n                    removeIcon,\n                })))\n                : value.map((item, index) => (React.createElement(ListItemField, Object.assign({ key: index, label: null, name: joinName(name, index), removeIcon: removeIcon }, itemProps)))))));\n};\nexport default connectField(List, {\n    ensureValue: false,\n    includeInChain: false,\n});\n"]},"metadata":{},"sourceType":"module"}