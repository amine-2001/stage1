{"ast":null,"code":"import { filterDOMProps } from 'uniforms';\nfilterDOMProps.register('grid');\n\nfunction gridClassNamePart(size, value, side) {\n  const sizeInfix = size === 'xs' ? '' : `${size}-`;\n  return side === 'label' ? `col-${sizeInfix}${value}` : `col-${sizeInfix}${12 - value}`;\n}\n\nconst gridOrder = {\n  xs: 1,\n  sm: 2,\n  md: 3,\n  lg: 4,\n  xl: 5\n};\n\nfunction compareSizeClass(a, b) {\n  return gridOrder[a] - gridOrder[b];\n}\n\nexport default function gridClassName(grid, side) {\n  // Example: 6\n  if (typeof grid === 'number') {\n    return gridClassNamePart('xs', grid, side);\n  } // Example: '6'\n\n\n  if (typeof grid === 'string' && !isNaN(parseInt(grid))) {\n    return gridClassNamePart('xs', parseInt(grid), side);\n  } // Example: 'col-md-6'\n\n\n  if (typeof grid === 'string') {\n    return grid;\n  } // Example: {xs: 6, sm: 4, md: 3}\n\n\n  if (typeof grid === 'object') {\n    if (!grid.xs) {\n      grid = Object.assign({\n        xs: grid.sm || grid.md || grid.lg || grid.xl\n      }, grid);\n    }\n\n    return Object.keys(grid).sort(compareSizeClass).map(size => gridClassNamePart(size, grid[size], side)).join(' ');\n  }\n\n  return '';\n}","map":{"version":3,"sources":["C:/wamp/www/Projet_snaii_DEV/snaii/node_modules/uniforms-bootstrap4/es6/gridClassName.js"],"names":["filterDOMProps","register","gridClassNamePart","size","value","side","sizeInfix","gridOrder","xs","sm","md","lg","xl","compareSizeClass","a","b","gridClassName","grid","isNaN","parseInt","Object","assign","keys","sort","map","join"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACAA,cAAc,CAACC,QAAf,CAAwB,MAAxB;;AACA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,IAAxC,EAA8C;AAC1C,QAAMC,SAAS,GAAGH,IAAI,KAAK,IAAT,GAAgB,EAAhB,GAAsB,GAAEA,IAAK,GAA/C;AACA,SAAOE,IAAI,KAAK,OAAT,GACA,OAAMC,SAAU,GAAEF,KAAM,EADxB,GAEA,OAAME,SAAU,GAAE,KAAKF,KAAM,EAFpC;AAGH;;AACD,MAAMG,SAAS,GAAG;AACdC,EAAAA,EAAE,EAAE,CADU;AAEdC,EAAAA,EAAE,EAAE,CAFU;AAGdC,EAAAA,EAAE,EAAE,CAHU;AAIdC,EAAAA,EAAE,EAAE,CAJU;AAKdC,EAAAA,EAAE,EAAE;AALU,CAAlB;;AAOA,SAASC,gBAAT,CAA0BC,CAA1B,EAA6BC,CAA7B,EAAgC;AAC5B,SAAOR,SAAS,CAACO,CAAD,CAAT,GAAeP,SAAS,CAACQ,CAAD,CAA/B;AACH;;AACD,eAAe,SAASC,aAAT,CAAuBC,IAAvB,EAA6BZ,IAA7B,EAAmC;AAC9C;AACA,MAAI,OAAOY,IAAP,KAAgB,QAApB,EAA8B;AAC1B,WAAOf,iBAAiB,CAAC,IAAD,EAAOe,IAAP,EAAaZ,IAAb,CAAxB;AACH,GAJ6C,CAK9C;;;AACA,MAAI,OAAOY,IAAP,KAAgB,QAAhB,IAA4B,CAACC,KAAK,CAACC,QAAQ,CAACF,IAAD,CAAT,CAAtC,EAAwD;AACpD,WAAOf,iBAAiB,CAAC,IAAD,EAAOiB,QAAQ,CAACF,IAAD,CAAf,EAAuBZ,IAAvB,CAAxB;AACH,GAR6C,CAS9C;;;AACA,MAAI,OAAOY,IAAP,KAAgB,QAApB,EAA8B;AAC1B,WAAOA,IAAP;AACH,GAZ6C,CAa9C;;;AACA,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC1B,QAAI,CAACA,IAAI,CAACT,EAAV,EAAc;AACVS,MAAAA,IAAI,GAAGG,MAAM,CAACC,MAAP,CAAc;AAAEb,QAAAA,EAAE,EAAES,IAAI,CAACR,EAAL,IAAWQ,IAAI,CAACP,EAAhB,IAAsBO,IAAI,CAACN,EAA3B,IAAiCM,IAAI,CAACL;AAA5C,OAAd,EAAgEK,IAAhE,CAAP;AACH;;AACD,WAAOG,MAAM,CAACE,IAAP,CAAYL,IAAZ,EACFM,IADE,CACGV,gBADH,EAEFW,GAFE,CAEErB,IAAI,IAAID,iBAAiB,CAACC,IAAD,EAAOc,IAAI,CAACd,IAAD,CAAX,EAAmBE,IAAnB,CAF3B,EAGFoB,IAHE,CAGG,GAHH,CAAP;AAIH;;AACD,SAAO,EAAP;AACH","sourcesContent":["import { filterDOMProps } from 'uniforms';\nfilterDOMProps.register('grid');\nfunction gridClassNamePart(size, value, side) {\n    const sizeInfix = size === 'xs' ? '' : `${size}-`;\n    return side === 'label'\n        ? `col-${sizeInfix}${value}`\n        : `col-${sizeInfix}${12 - value}`;\n}\nconst gridOrder = {\n    xs: 1,\n    sm: 2,\n    md: 3,\n    lg: 4,\n    xl: 5,\n};\nfunction compareSizeClass(a, b) {\n    return gridOrder[a] - gridOrder[b];\n}\nexport default function gridClassName(grid, side) {\n    // Example: 6\n    if (typeof grid === 'number') {\n        return gridClassNamePart('xs', grid, side);\n    }\n    // Example: '6'\n    if (typeof grid === 'string' && !isNaN(parseInt(grid))) {\n        return gridClassNamePart('xs', parseInt(grid), side);\n    }\n    // Example: 'col-md-6'\n    if (typeof grid === 'string') {\n        return grid;\n    }\n    // Example: {xs: 6, sm: 4, md: 3}\n    if (typeof grid === 'object') {\n        if (!grid.xs) {\n            grid = Object.assign({ xs: grid.sm || grid.md || grid.lg || grid.xl }, grid);\n        }\n        return Object.keys(grid)\n            .sort(compareSizeClass)\n            .map(size => gridClassNamePart(size, grid[size], side))\n            .join(' ');\n    }\n    return '';\n}\n"]},"metadata":{},"sourceType":"module"}