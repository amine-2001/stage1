{"ast":null,"code":"import { __rest } from \"tslib\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport { BaseField, filterDOMProps } from 'uniforms';\nimport gridClassName from './gridClassName';\n\nconst SubmitField = (_a, {\n  uniforms: {\n    error,\n    state\n  }\n}) => {\n  var {\n    className,\n    disabled,\n    inputClassName,\n    inputRef,\n    value,\n    wrapClassName\n  } = _a,\n      props = __rest(_a, [\"className\", \"disabled\", \"inputClassName\", \"inputRef\", \"value\", \"wrapClassName\"]);\n\n  const hasWrap = !!(state.grid || wrapClassName);\n  const blockInput = React.createElement(\"input\", Object.assign({\n    className: inputClassName,\n    disabled: disabled === undefined ? !!(error || state.disabled) : disabled,\n    ref: inputRef,\n    type: \"submit\"\n  }, value ? {\n    value\n  } : {}));\n  return React.createElement(\"div\", Object.assign({\n    className: classnames(className, {\n      'is-invalid': error,\n      row: state.grid\n    })\n  }, filterDOMProps(props)), hasWrap && React.createElement(\"label\", {\n    className: classnames('col-form-label', gridClassName(state.grid, 'label'))\n  }, \"\\u00A0\"), hasWrap && React.createElement(\"div\", {\n    className: classnames(wrapClassName, gridClassName(state.grid, 'input'))\n  }, blockInput), !hasWrap && blockInput);\n};\n\nSubmitField.contextTypes = BaseField.contextTypes;\nSubmitField.defaultProps = {\n  inputClassName: 'btn btn-primary'\n};\nexport default SubmitField;","map":{"version":3,"sources":["C:/wamp/www/Projet_snaii_DEV/snaii/node_modules/uniforms-bootstrap4/es6/SubmitField.js"],"names":["__rest","React","classnames","BaseField","filterDOMProps","gridClassName","SubmitField","_a","uniforms","error","state","className","disabled","inputClassName","inputRef","value","wrapClassName","props","hasWrap","grid","blockInput","createElement","Object","assign","undefined","ref","type","row","contextTypes","defaultProps"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,UAA1C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AACA,MAAMC,WAAW,GAAG,CAACC,EAAD,EAAK;AAAEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAZ,CAAL,KAAwC;AACxD,MAAI;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA,cAAvB;AAAuCC,IAAAA,QAAvC;AAAiDC,IAAAA,KAAjD;AAAwDC,IAAAA;AAAxD,MAA0ET,EAA9E;AAAA,MAAkFU,KAAK,GAAGjB,MAAM,CAACO,EAAD,EAAK,CAAC,WAAD,EAAc,UAAd,EAA0B,gBAA1B,EAA4C,UAA5C,EAAwD,OAAxD,EAAiE,eAAjE,CAAL,CAAhG;;AACA,QAAMW,OAAO,GAAG,CAAC,EAAER,KAAK,CAACS,IAAN,IAAcH,aAAhB,CAAjB;AACA,QAAMI,UAAU,GAAInB,KAAK,CAACoB,aAAN,CAAoB,OAApB,EAA6BC,MAAM,CAACC,MAAP,CAAc;AAAEZ,IAAAA,SAAS,EAAEE,cAAb;AAA6BD,IAAAA,QAAQ,EAAEA,QAAQ,KAAKY,SAAb,GAAyB,CAAC,EAAEf,KAAK,IAAIC,KAAK,CAACE,QAAjB,CAA1B,GAAuDA,QAA9F;AAAwGa,IAAAA,GAAG,EAAEX,QAA7G;AAAuHY,IAAAA,IAAI,EAAE;AAA7H,GAAd,EAAwJX,KAAK,GAAG;AAAEA,IAAAA;AAAF,GAAH,GAAe,EAA5K,CAA7B,CAApB;AACA,SAAQd,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2BC,MAAM,CAACC,MAAP,CAAc;AAAEZ,IAAAA,SAAS,EAAET,UAAU,CAACS,SAAD,EAAY;AAC5E,oBAAcF,KAD8D;AAE5EkB,MAAAA,GAAG,EAAEjB,KAAK,CAACS;AAFiE,KAAZ;AAAvB,GAAd,EAGzBf,cAAc,CAACa,KAAD,CAHW,CAA3B,EAIJC,OAAO,IAAKjB,KAAK,CAACoB,aAAN,CAAoB,OAApB,EAA6B;AAAEV,IAAAA,SAAS,EAAET,UAAU,CAAC,gBAAD,EAAmBG,aAAa,CAACK,KAAK,CAACS,IAAP,EAAa,OAAb,CAAhC;AAAvB,GAA7B,EAA8G,QAA9G,CAJR,EAKJD,OAAO,IAAKjB,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2B;AAAEV,IAAAA,SAAS,EAAET,UAAU,CAACc,aAAD,EAAgBX,aAAa,CAACK,KAAK,CAACS,IAAP,EAAa,OAAb,CAA7B;AAAvB,GAA3B,EAAyGC,UAAzG,CALR,EAMJ,CAACF,OAAD,IAAYE,UANR,CAAR;AAOH,CAXD;;AAYAd,WAAW,CAACsB,YAAZ,GAA2BzB,SAAS,CAACyB,YAArC;AACAtB,WAAW,CAACuB,YAAZ,GAA2B;AAAEhB,EAAAA,cAAc,EAAE;AAAlB,CAA3B;AACA,eAAeP,WAAf","sourcesContent":["import { __rest } from \"tslib\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport { BaseField, filterDOMProps } from 'uniforms';\nimport gridClassName from './gridClassName';\nconst SubmitField = (_a, { uniforms: { error, state } }) => {\n    var { className, disabled, inputClassName, inputRef, value, wrapClassName } = _a, props = __rest(_a, [\"className\", \"disabled\", \"inputClassName\", \"inputRef\", \"value\", \"wrapClassName\"]);\n    const hasWrap = !!(state.grid || wrapClassName);\n    const blockInput = (React.createElement(\"input\", Object.assign({ className: inputClassName, disabled: disabled === undefined ? !!(error || state.disabled) : disabled, ref: inputRef, type: \"submit\" }, (value ? { value } : {}))));\n    return (React.createElement(\"div\", Object.assign({ className: classnames(className, {\n            'is-invalid': error,\n            row: state.grid,\n        }) }, filterDOMProps(props)),\n        hasWrap && (React.createElement(\"label\", { className: classnames('col-form-label', gridClassName(state.grid, 'label')) }, \"\\u00A0\")),\n        hasWrap && (React.createElement(\"div\", { className: classnames(wrapClassName, gridClassName(state.grid, 'input')) }, blockInput)),\n        !hasWrap && blockInput));\n};\nSubmitField.contextTypes = BaseField.contextTypes;\nSubmitField.defaultProps = { inputClassName: 'btn btn-primary' };\nexport default SubmitField;\n"]},"metadata":{},"sourceType":"module"}