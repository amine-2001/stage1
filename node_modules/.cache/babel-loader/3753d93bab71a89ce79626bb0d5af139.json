{"ast":null,"code":"import React from 'react';\nimport classnames from 'classnames';\nimport { connectField } from 'uniforms';\nimport wrapField from './wrapField';\nconst DateConstructor = (typeof global === 'object' ? global : window).Date;\n\nconst dateFormat = value => value && value.toISOString().slice(0, -8);\n\nconst dateParse = (timestamp, onChange) => {\n  const date = new DateConstructor(timestamp);\n\n  if (date.getFullYear() < 10000) {\n    onChange(date);\n  } else if (isNaN(timestamp)) {\n    onChange(undefined);\n  }\n};\n\nconst Date = props => wrapField(props, React.createElement(\"input\", {\n  className: classnames(props.inputClassName, 'form-control', {\n    'is-invalid': props.error\n  }),\n  disabled: props.disabled,\n  id: props.id,\n  max: dateFormat(props.max),\n  min: dateFormat(props.min),\n  name: props.name,\n  onChange: event => dateParse(event.target.valueAsNumber, props.onChange),\n  placeholder: props.placeholder,\n  ref: props.inputRef,\n  type: \"datetime-local\",\n  value: dateFormat(props.value)\n}));\n\nexport default connectField(Date);","map":{"version":3,"sources":["C:/wamp/www/Projet_snaii_DEV/snaii/node_modules/uniforms-bootstrap4/es6/DateField.js"],"names":["React","classnames","connectField","wrapField","DateConstructor","global","window","Date","dateFormat","value","toISOString","slice","dateParse","timestamp","onChange","date","getFullYear","isNaN","undefined","props","createElement","className","inputClassName","error","disabled","id","max","min","name","event","target","valueAsNumber","placeholder","ref","inputRef","type"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,MAAMC,eAAe,GAAG,CAAC,OAAOC,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCC,MAAvC,EAA+CC,IAAvE;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,IAAIA,KAAK,CAACC,WAAN,GAAoBC,KAApB,CAA0B,CAA1B,EAA6B,CAAC,CAA9B,CAArC;;AACA,MAAMC,SAAS,GAAG,CAACC,SAAD,EAAYC,QAAZ,KAAyB;AACvC,QAAMC,IAAI,GAAG,IAAIX,eAAJ,CAAoBS,SAApB,CAAb;;AACA,MAAIE,IAAI,CAACC,WAAL,KAAqB,KAAzB,EAAgC;AAC5BF,IAAAA,QAAQ,CAACC,IAAD,CAAR;AACH,GAFD,MAGK,IAAIE,KAAK,CAACJ,SAAD,CAAT,EAAsB;AACvBC,IAAAA,QAAQ,CAACI,SAAD,CAAR;AACH;AACJ,CARD;;AASA,MAAMX,IAAI,GAAGY,KAAK,IAAIhB,SAAS,CAACgB,KAAD,EAAQnB,KAAK,CAACoB,aAAN,CAAoB,OAApB,EAA6B;AAAEC,EAAAA,SAAS,EAAEpB,UAAU,CAACkB,KAAK,CAACG,cAAP,EAAuB,cAAvB,EAAuC;AAC1H,kBAAcH,KAAK,CAACI;AADsG,GAAvC,CAAvB;AAE5DC,EAAAA,QAAQ,EAAEL,KAAK,CAACK,QAF4C;AAElCC,EAAAA,EAAE,EAAEN,KAAK,CAACM,EAFwB;AAEpBC,EAAAA,GAAG,EAAElB,UAAU,CAACW,KAAK,CAACO,GAAP,CAFK;AAEQC,EAAAA,GAAG,EAAEnB,UAAU,CAACW,KAAK,CAACQ,GAAP,CAFvB;AAEoCC,EAAAA,IAAI,EAAET,KAAK,CAACS,IAFhD;AAEsDd,EAAAA,QAAQ,EAAEe,KAAK,IAAIjB,SAAS,CAACiB,KAAK,CAACC,MAAN,CAAaC,aAAd,EAA6BZ,KAAK,CAACL,QAAnC,CAFlF;AAEgIkB,EAAAA,WAAW,EAAEb,KAAK,CAACa,WAFnJ;AAEgKC,EAAAA,GAAG,EAAEd,KAAK,CAACe,QAF3K;AAEqLC,EAAAA,IAAI,EAAE,gBAF3L;AAE6M1B,EAAAA,KAAK,EAAED,UAAU,CAACW,KAAK,CAACV,KAAP;AAF9N,CAA7B,CAAR,CAA/B;;AAGA,eAAeP,YAAY,CAACK,IAAD,CAA3B","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { connectField } from 'uniforms';\nimport wrapField from './wrapField';\nconst DateConstructor = (typeof global === 'object' ? global : window).Date;\nconst dateFormat = value => value && value.toISOString().slice(0, -8);\nconst dateParse = (timestamp, onChange) => {\n    const date = new DateConstructor(timestamp);\n    if (date.getFullYear() < 10000) {\n        onChange(date);\n    }\n    else if (isNaN(timestamp)) {\n        onChange(undefined);\n    }\n};\nconst Date = props => wrapField(props, React.createElement(\"input\", { className: classnames(props.inputClassName, 'form-control', {\n        'is-invalid': props.error,\n    }), disabled: props.disabled, id: props.id, max: dateFormat(props.max), min: dateFormat(props.min), name: props.name, onChange: event => dateParse(event.target.valueAsNumber, props.onChange), placeholder: props.placeholder, ref: props.inputRef, type: \"datetime-local\", value: dateFormat(props.value) }));\nexport default connectField(Date);\n"]},"metadata":{},"sourceType":"module"}