{"ast":null,"code":"import React from 'react';\nimport classnames from 'classnames';\nimport { connectField } from 'uniforms';\nimport wrapField from './wrapField';\nconst base64 = typeof btoa !== 'undefined' ? btoa : x => Buffer.from(x).toString('base64');\n\nconst escape = x => base64(x).replace(/=+$/, '');\n\nconst xor = (item, array) => {\n  const index = array.indexOf(item);\n\n  if (index === -1) {\n    return array.concat([item]);\n  }\n\n  return array.slice(0, index).concat(array.slice(index + 1));\n};\n\nconst renderCheckboxes = props => props.allowedValues.map(item => React.createElement(\"div\", {\n  key: item,\n  className: classnames(props.inputClassName, `checkbox${props.inline ? '-inline' : ''}`)\n}, React.createElement(\"label\", {\n  htmlFor: `${props.id}-${escape(item)}`\n}, React.createElement(\"input\", {\n  checked: props.fieldType === Array ? props.value.includes(item) : props.value === item,\n  disabled: props.disabled,\n  id: `${props.id}-${escape(item)}`,\n  name: props.name,\n  onChange: () => props.onChange(props.fieldType === Array ? xor(item, props.value) : item),\n  type: \"checkbox\"\n}), props.transform ? props.transform(item) : item)));\n\nconst renderSelect = props => React.createElement(\"select\", {\n  className: classnames(props.inputClassName, 'c-select form-control', {\n    'is-invalid': props.error\n  }),\n  disabled: props.disabled,\n  id: props.id,\n  name: props.name,\n  onChange: event => props.onChange(event.target.value !== '' ? event.target.value : undefined),\n  ref: props.inputRef,\n  value: props.value\n}, (!!props.placeholder || !props.required || props.value === '') && React.createElement(\"option\", {\n  value: \"\",\n  disabled: props.required,\n  hidden: props.required\n}, props.placeholder || props.label), props.allowedValues.map(value => React.createElement(\"option\", {\n  key: value,\n  value: value\n}, props.transform ? props.transform(value) : value)));\n\nconst Select = props => wrapField(props, props.checkboxes || props.fieldType === Array ? renderCheckboxes(props) : renderSelect(props));\n\nexport default connectField(Select);","map":{"version":3,"sources":["C:/wamp/www/Projet_snaii_DEV/snaii/node_modules/uniforms-bootstrap4/es6/SelectField.js"],"names":["React","classnames","connectField","wrapField","base64","btoa","x","Buffer","from","toString","escape","replace","xor","item","array","index","indexOf","concat","slice","renderCheckboxes","props","allowedValues","map","createElement","key","className","inputClassName","inline","htmlFor","id","checked","fieldType","Array","value","includes","disabled","name","onChange","type","transform","renderSelect","error","event","target","undefined","ref","inputRef","placeholder","required","hidden","label","Select","checkboxes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { connectField } from 'uniforms';\nimport wrapField from './wrapField';\nconst base64 = typeof btoa !== 'undefined'\n    ? btoa\n    : (x) => Buffer.from(x).toString('base64');\nconst escape = (x) => base64(x).replace(/=+$/, '');\nconst xor = (item, array) => {\n    const index = array.indexOf(item);\n    if (index === -1) {\n        return array.concat([item]);\n    }\n    return array.slice(0, index).concat(array.slice(index + 1));\n};\nconst renderCheckboxes = props => props.allowedValues.map(item => (React.createElement(\"div\", { key: item, className: classnames(props.inputClassName, `checkbox${props.inline ? '-inline' : ''}`) },\n    React.createElement(\"label\", { htmlFor: `${props.id}-${escape(item)}` },\n        React.createElement(\"input\", { checked: props.fieldType === Array\n                ? props.value.includes(item)\n                : props.value === item, disabled: props.disabled, id: `${props.id}-${escape(item)}`, name: props.name, onChange: () => props.onChange(props.fieldType === Array ? xor(item, props.value) : item), type: \"checkbox\" }),\n        props.transform ? props.transform(item) : item))));\nconst renderSelect = props => (React.createElement(\"select\", { className: classnames(props.inputClassName, 'c-select form-control', {\n        'is-invalid': props.error,\n    }), disabled: props.disabled, id: props.id, name: props.name, onChange: event => props.onChange(event.target.value !== '' ? event.target.value : undefined), ref: props.inputRef, value: props.value },\n    (!!props.placeholder || !props.required || props.value === '') && (React.createElement(\"option\", { value: \"\", disabled: props.required, hidden: props.required }, props.placeholder || props.label)),\n    props.allowedValues.map(value => (React.createElement(\"option\", { key: value, value: value }, props.transform ? props.transform(value) : value)))));\nconst Select = props => wrapField(props, props.checkboxes || props.fieldType === Array\n    ? renderCheckboxes(props)\n    : renderSelect(props));\nexport default connectField(Select);\n"]},"metadata":{},"sourceType":"module"}